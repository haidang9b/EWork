Æ‹
>D:\Dacntt2\Source\EW\EW.Service\Business\ApplicationService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{		 
public

 

class

 
ApplicationService

 #
:

$ %
IApplicationService

& 9
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly #
IRecruitmentPostService 0#
_recruitmentPostService1 H
;H I
public 
ApplicationService !
(! "
IUnitOfWork 

unitOfWork "
," ##
IRecruitmentPostService #"
recruitmentPostService$ :
) 	
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %#
_recruitmentPostService #
=$ %"
recruitmentPostService& <
;< =
} 	
public 
async 
Task 
< 
Application %
>% &
Add' *
(* +
AddApplicationModel+ >
model? D
)D E
{ 	
var 
user 
= 
await 
_unitOfWork (
.( )

Repository) 3
<3 4
User4 8
>8 9
(9 :
): ;
.; <
FirstOrDefaultAsync< O
(O P
itemP T
=>U W
itemX \
.\ ]
Id] _
==` b
modelc h
.h i
UserIdi o
)o p
;p q
var 
recruitmentPost 
=  !
await" '
_unitOfWork( 3
.3 4

Repository4 >
<> ?
RecruitmentPost? N
>N O
(O P
)P Q
.Q R
FirstOrDefaultAsyncR e
(e f
itemf j
=>k m
itemn r
.r s
Ids u
==v x
modely ~
.~ 
RecruitmentPostId	 ê
)
ê ë
;
ë í
var 
cvApply 
= 
await 
_unitOfWork  +
.+ ,

Repository, 6
<6 7
UserCV7 =
>= >
(> ?
)? @
.@ A
FirstOrDefaultAsyncA T
(T U
itemU Y
=>Z \
item] a
.a b
Idb d
==e g
modelh m
.m n
UserCVIdn v
,v w
$strx ~
)~ 
;	 Ä
if 
( 
recruitmentPost 
is  "
null# '
)' (
{ 
throw   
new   
EWException   %
(  % &
$str  & >
)  > ?
;  ? @
}!! 
if## 
(## 
cvApply## 
is## 
null## 
)##  
{$$ 
throw%% 
new%% 
EWException%% %
(%%% &
$str%%& 8
)%%8 9
;%%9 :
}&& 
if(( 
((( 
user(( 
.(( 
Id(( 
!=(( 
cvApply(( "
.((" #
UserId((# )
)(() *
{)) 
throw** 
new** 
EWException** %
(**% &
$str**& F
)**F G
;**G H
}++ 
var,, 
existApplied,, 
=,, 
await,, $
_unitOfWork,,% 0
.,,0 1

Repository,,1 ;
<,,; <
Application,,< G
>,,G H
(,,H I
),,I J
.,,J K
FirstOrDefaultAsync,,K ^
(,,^ _
item,,_ c
=>,,d f
item,,g k
.,,k l
RecruitmentPostId,,l }
==	,,~ Ä
model
,,Å Ü
.
,,Ü á
RecruitmentPostId
,,á ò
&&
,,ô õ
item
,,ú †
.
,,† °
UserCV
,,° ß
.
,,ß ®
UserId
,,® Æ
==
,,Ø ±
user
,,≤ ∂
.
,,∂ ∑
Id
,,∑ π
)
,,π ∫
;
,,∫ ª
if-- 
(-- 
existApplied-- 
is-- 
not--  #
null--$ (
)--( )
{.. 
throw// 
new// 
EWException// %
(//% &
$str//& U
)//U V
;//V W
}00 
var22 
newApplication22 
=22  
new22! $
Application22% 0
{33 
UserCVId44 
=44 
model44  
.44  !
UserCVId44! )
,44) *
RecruitmentPostId55 !
=55" #
model55$ )
.55) *
RecruitmentPostId55* ;
,55; <
CoverLetter66 
=66 
model66 #
.66# $
CoverLetter66$ /
,66/ 0
Description77 
=77 
$str77  
,77  !
Status88 
=88 
model88 
.88 
Status88 %
,88% &
CreatedDate99 
=99 
DateTimeOffset99 ,
.99, -
Now99- 0
,990 1
UpdatedDate:: 
=:: 
DateTimeOffset:: ,
.::, -
Now::- 0
,::0 1
};; 
;;; 
user<< 
.<< 
CoverLetter<< 
=<< 
model<< $
.<<$ %
CoverLetter<<% 0
;<<0 1
_unitOfWork== 
.== 

Repository== "
<==" #
User==# '
>==' (
(==( )
)==) *
.==* +
Update==+ 1
(==1 2
user==2 6
)==6 7
;==7 8
await>> 
_unitOfWork>> 
.>> 

Repository>> (
<>>( )
Application>>) 4
>>>4 5
(>>5 6
)>>6 7
.>>7 8
AddAsync>>8 @
(>>@ A
newApplication>>A O
)>>O P
;>>P Q
if?? 
(?? 
!?? 
(?? 
await?? 
_unitOfWork?? #
.??# $
SaveChangeAsync??$ 3
(??3 4
)??4 5
)??5 6
)??6 7
{@@ 
throwAA 
newAA 
EWExceptionAA %
(AA% &
$strAA& ;
)AA; <
;AA< =
}BB 
returnCC 
newApplicationCC !
;CC! "
}DD 	
publicFF 
asyncFF 
TaskFF 
<FF 
IEnumerableFF %
<FF% &'
AppliedForBusinessViewModelFF& A
>FFA B
>FFB C
GetAppliedsFFD O
(FFO P
)FFP Q
{GG 	
varHH 
applicationsHH 
=HH 
awaitHH $
_unitOfWorkHH% 0
.HH0 1

RepositoryHH1 ;
<HH; <
ApplicationHH< G
>HHG H
(HHH I
)HHI J
.HHJ K
GetAllAsyncHHK V
(HHV W
$strHHW o
)HHo p
;HHp q
varII 
responseDataII 
=II 
newII "
ListII# '
<II' ('
AppliedForBusinessViewModelII( C
>IIC D
(IID E
)IIE F
;IIF G
varJJ 
usersJJ 
=JJ 
awaitJJ 
_unitOfWorkJJ )
.JJ) *

RepositoryJJ* 4
<JJ4 5
UserJJ5 9
>JJ9 :
(JJ: ;
)JJ; <
.JJ< =
GetAllAsyncJJ= H
(JJH I
)JJI J
;JJJ K
foreachKK 
(KK 
varKK 
applicationKK $
inKK% '
applicationsKK( 4
)KK4 5
{LL 
varMM 
applicationUserMM #
=MM$ %
usersMM& +
.MM+ ,
FirstOrDefaultMM, :
(MM: ;
itemMM; ?
=>MM@ B
itemMMC G
.MMG H
IdMMH J
==MMK M
applicationMMN Y
.MMY Z
UserCVMMZ `
.MM` a
UserIdMMa g
)MMg h
;MMh i
ifNN 
(NN 
applicationUserNN #
isNN$ &
nullNN' +
)NN+ ,
continueOO 
;OO 
varPP 
userRowPP 
=PP 
newPP !,
 UserInforJobApplicationViewModelPP" B
{QQ 
IdRR 
=RR 
applicationUserRR (
.RR( )
IdRR) +
,RR+ ,
FullNameSS 
=SS 
applicationUserSS .
.SS. /
FullNameSS/ 7
,SS7 8
EmailTT 
=TT 
applicationUserTT +
.TT+ ,
EmailTT, 1
,TT1 2
PhoneNumberUU 
=UU  !
applicationUserUU" 1
.UU1 2
PhoneNumberUU2 =
,UU= >
}VV 
;VV 
varXX 
cvXX 
=XX 
newXX *
CVInforJobApplicationViewModelXX ;
{YY 
UserCVIdZZ 
=ZZ 
applicationZZ *
.ZZ* +
UserCVIdZZ+ 3
,ZZ3 4
CVUrl[[ 
=[[ 
application[[ '
.[[' (
UserCV[[( .
.[[. /
CVUrl[[/ 4
,[[4 5
CVName\\ 
=\\ 
application\\ (
.\\( )
UserCV\\) /
.\\/ 0
CVName\\0 6
,\\6 7
}]] 
;]] 
var__ 
post__ 
=__ 
new__ ,
 PostInforJobApplicationViewModel__ ?
{`` 
RecruitmentPostIdaa %
=aa& '
applicationaa( 3
.aa3 4
RecruitmentPostIdaa4 E
,aaE F
JobTitlebb 
=bb 
applicationbb *
.bb* +
RecruitmentPostbb+ :
.bb: ;
JobTitlebb; C
,bbC D
	CompanyIdcc 
=cc 
applicationcc  +
.cc+ ,
RecruitmentPostcc, ;
.cc; <
	CompanyIdcc< E
,ccE F
}dd 
;dd 
varee 
rowee 
=ee 
newee '
AppliedForBusinessViewModelee 9
{ff 
Idgg 
=gg 
applicationgg $
.gg$ %
Idgg% '
,gg' (
Userhh 
=hh 
userRowhh "
,hh" #
CVii 
=ii 
cvii 
,ii 
Postjj 
=jj 
postjj 
,jj  
Descriptionkk 
=kk  !
applicationkk" -
.kk- .
Descriptionkk. 9
,kk9 :
UpdatedDatell 
=ll  !
applicationll" -
.ll- .
UpdatedDatell. 9
,ll9 :
CreatedDatemm 
=mm  !
applicationmm" -
.mm- .
CreatedDatemm. 9
,mm9 :
Statusnn 
=nn 
applicationnn (
.nn( )
Statusnn) /
}oo 
;oo 
responseDataqq 
.qq 
Addqq  
(qq  !
rowqq! $
)qq$ %
;qq% &
}rr 
returnss 
responseDatass 
.ss  
OrderByDescendingss  1
(ss1 2
itemss2 6
=>ss7 9
itemss: >
.ss> ?
CreatedDatess? J
)ssJ K
;ssK L
}tt 	
publicvv 
asyncvv 
Taskvv 
<vv 
IEnumerablevv %
<vv% &'
AppliedForBusinessViewModelvv& A
>vvA B
>vvB C"
GetAppliedsForBusinessvvD Z
(vvZ [
Uservv[ _
uservv` d
)vvd e
{ww 	
varxx 
currentUserxx 
=xx 
awaitxx #
_unitOfWorkxx$ /
.xx/ 0

Repositoryxx0 :
<xx: ;
Userxx; ?
>xx? @
(xx@ A
)xxA B
.xxB C
FirstOrDefaultAsyncxxC V
(xxV W
itemxxW [
=>xx\ ^
itemxx_ c
.xxc d
Usernamexxd l
==xxm o
userxxp t
.xxt u
Usernamexxu }
)xx} ~
??yy 
throwyy $
newyy% (
EWExceptionyy) 4
(yy4 5
$stryy5 S
)yyS T
;yyT U
varzz 
postszz 
=zz 
awaitzz #
_recruitmentPostServicezz 5
.zz5 6%
GetRecruitmentPostsByUserzz6 O
(zzO P
currentUserzzP [
)zz[ \
;zz\ ]
var{{ 
postIds{{ 
={{ 
posts{{ 
.{{  
Select{{  &
({{& '
item{{' +
=>{{, .
item{{/ 3
.{{3 4
Id{{4 6
){{6 7
.{{7 8
ToList{{8 >
({{> ?
){{? @
;{{@ A
var|| 
users|| 
=|| 
await|| 
_unitOfWork|| )
.||) *

Repository||* 4
<||4 5
User||5 9
>||9 :
(||: ;
)||; <
.||< =
GetAllAsync||= H
(||H I
)||I J
;||J K
var}} 
applications}} 
=}} 
await}} $
_unitOfWork}}% 0
.}}0 1

Repository}}1 ;
<}}; <
Application}}< G
>}}G H
(}}H I
)}}I J
.}}J K
GetAsync}}K S
(}}S T
item}}T X
=>}}Y [
postIds}}\ c
.}}c d
Contains}}d l
(}}l m
item}}m q
.}}q r
RecruitmentPostId	}}r É
)
}}É Ñ
,
}}Ñ Ö
$str
}}Ü û
)
}}û ü
;
}}ü †
var~~ 
responseData~~ 
=~~ 
new~~ "
List~~# '
<~~' ('
AppliedForBusinessViewModel~~( C
>~~C D
(~~D E
)~~E F
;~~F G
foreach 
( 
var 
application $
in% '
applications( 4
)4 5
{
ÄÄ 
var
ÅÅ 
applicationUser
ÅÅ #
=
ÅÅ$ %
users
ÅÅ& +
.
ÅÅ+ ,
FirstOrDefault
ÅÅ, :
(
ÅÅ: ;
item
ÅÅ; ?
=>
ÅÅ@ B
item
ÅÅC G
.
ÅÅG H
Id
ÅÅH J
==
ÅÅK M
application
ÅÅN Y
.
ÅÅY Z
UserCV
ÅÅZ `
.
ÅÅ` a
UserId
ÅÅa g
)
ÅÅg h
;
ÅÅh i
if
ÇÇ 
(
ÇÇ 
applicationUser
ÇÇ #
is
ÇÇ$ &
null
ÇÇ' +
)
ÇÇ+ ,
continue
ÉÉ 
;
ÉÉ 
var
ÑÑ 
userRow
ÑÑ 
=
ÑÑ 
new
ÑÑ !.
 UserInforJobApplicationViewModel
ÑÑ" B
{
ÖÖ 
Id
ÜÜ 
=
ÜÜ 
applicationUser
ÜÜ (
.
ÜÜ( )
Id
ÜÜ) +
,
ÜÜ+ ,
FullName
áá 
=
áá 
applicationUser
áá .
.
áá. /
FullName
áá/ 7
,
áá7 8
Email
àà 
=
àà 
applicationUser
àà +
.
àà+ ,
Email
àà, 1
,
àà1 2
PhoneNumber
ââ 
=
ââ  !
applicationUser
ââ" 1
.
ââ1 2
PhoneNumber
ââ2 =
,
ââ= >
}
ää 
;
ää 
var
åå 
cv
åå 
=
åå 
new
åå ,
CVInforJobApplicationViewModel
åå ;
{
çç 
UserCVId
éé 
=
éé 
application
éé *
.
éé* +
UserCVId
éé+ 3
,
éé3 4
CVUrl
èè 
=
èè 
application
èè '
.
èè' (
UserCV
èè( .
.
èè. /
CVUrl
èè/ 4
,
èè4 5
CVName
êê 
=
êê 
application
êê (
.
êê( )
UserCV
êê) /
.
êê/ 0
CVName
êê0 6
,
êê6 7
}
ëë 
;
ëë 
var
ìì 
post
ìì 
=
ìì 
new
ìì .
 PostInforJobApplicationViewModel
ìì ?
{
îî 
RecruitmentPostId
ïï %
=
ïï& '
application
ïï( 3
.
ïï3 4
RecruitmentPostId
ïï4 E
,
ïïE F
JobTitle
ññ 
=
ññ 
application
ññ *
.
ññ* +
RecruitmentPost
ññ+ :
.
ññ: ;
JobTitle
ññ; C
,
ññC D
	CompanyId
óó 
=
óó 
application
óó  +
.
óó+ ,
RecruitmentPost
óó, ;
.
óó; <
	CompanyId
óó< E
,
óóE F
}
òò 
;
òò 
var
ôô 
row
ôô 
=
ôô 
new
ôô )
AppliedForBusinessViewModel
ôô 9
{
öö 
Id
õõ 
=
õõ 
application
õõ $
.
õõ$ %
Id
õõ% '
,
õõ' (
User
úú 
=
úú 
userRow
úú "
,
úú" #
CV
ùù 
=
ùù 
cv
ùù 
,
ùù 
Post
ûû 
=
ûû 
post
ûû 
,
ûû  
Description
üü 
=
üü  !
application
üü" -
.
üü- .
Description
üü. 9
,
üü9 :
UpdatedDate
†† 
=
††  !
application
††" -
.
††- .
UpdatedDate
††. 9
,
††9 :
CreatedDate
°° 
=
°°  !
application
°°" -
.
°°- .
CreatedDate
°°. 9
,
°°9 :
Status
¢¢ 
=
¢¢ 
application
¢¢ (
.
¢¢( )
Status
¢¢) /
}
££ 
;
££ 
responseData
•• 
.
•• 
Add
••  
(
••  !
row
••! $
)
••$ %
;
••% &
}
¶¶ 
return
ßß 
responseData
ßß 
.
ßß  
OrderByDescending
ßß  1
(
ßß1 2
item
ßß2 6
=>
ßß7 9
item
ßß: >
.
ßß> ?
CreatedDate
ßß? J
)
ßßJ K
;
ßßK L
}
®® 	
public
™™ 
async
™™ 
Task
™™ 
<
™™ 
IEnumerable
™™ %
<
™™% &
Application
™™& 1
>
™™1 2
>
™™2 3
GetByApplier
™™4 @
(
™™@ A
User
™™A E
user
™™F J
)
™™J K
{
´´ 	
var
¨¨ 
currentUser
¨¨ 
=
¨¨ 
await
¨¨ #
_unitOfWork
¨¨$ /
.
¨¨/ 0

Repository
¨¨0 :
<
¨¨: ;
User
¨¨; ?
>
¨¨? @
(
¨¨@ A
)
¨¨A B
.
¨¨B C!
FirstOrDefaultAsync
¨¨C V
(
¨¨V W
item
¨¨W [
=>
¨¨\ ^
item
¨¨_ c
.
¨¨c d
Username
¨¨d l
==
¨¨m o
user
¨¨p t
.
¨¨t u
Username
¨¨u }
)
¨¨} ~
??
≠≠  "
throw
≠≠# (
new
≠≠) ,
EWException
≠≠- 8
(
≠≠8 9
$str
≠≠9 W
)
≠≠W X
;
≠≠X Y
return
ÆÆ 
await
ÆÆ 
_unitOfWork
ÆÆ $
.
ÆÆ$ %

Repository
ÆÆ% /
<
ÆÆ/ 0
Application
ÆÆ0 ;
>
ÆÆ; <
(
ÆÆ< =
)
ÆÆ= >
.
ÆÆ> ?
GetAsync
ÆÆ? G
(
ÆÆG H
item
ÆÆH L
=>
ÆÆM O
item
ÆÆP T
.
ÆÆT U
UserCV
ÆÆU [
.
ÆÆ[ \
UserId
ÆÆ\ b
==
ÆÆc e
currentUser
ÆÆf q
.
ÆÆq r
Id
ÆÆr t
)
ÆÆt u
;
ÆÆu v
}
ØØ 	
public
±± 
async
±± 
Task
±± 
<
±± 
IEnumerable
±± %
<
±±% &!
JobAppliedViewModel
±±& 9
>
±±9 :
>
±±: ;
GetJobsApplied
±±< J
(
±±J K
User
±±K O
user
±±P T
)
±±T U
{
≤≤ 	
var
≥≥ 
currentUser
≥≥ 
=
≥≥ 
await
≥≥ #
_unitOfWork
≥≥$ /
.
≥≥/ 0

Repository
≥≥0 :
<
≥≥: ;
User
≥≥; ?
>
≥≥? @
(
≥≥@ A
)
≥≥A B
.
≥≥B C!
FirstOrDefaultAsync
≥≥C V
(
≥≥V W
item
≥≥W [
=>
≥≥\ ^
item
≥≥_ c
.
≥≥c d
Username
≥≥d l
==
≥≥m o
user
≥≥p t
.
≥≥t u
Username
≥≥u }
)
≥≥} ~
??
¥¥  "
throw
¥¥# (
new
¥¥) ,
EWException
¥¥- 8
(
¥¥8 9
$str
¥¥9 W
)
¥¥W X
;
¥¥X Y
var
µµ 
applieds
µµ 
=
µµ 
await
µµ  
_unitOfWork
µµ! ,
.
µµ, -

Repository
µµ- 7
<
µµ7 8
Application
µµ8 C
>
µµC D
(
µµD E
)
µµE F
.
µµF G
GetAsync
µµG O
(
µµO P
item
µµP T
=>
µµU W
item
µµX \
.
µµ\ ]
UserCV
µµ] c
.
µµc d
UserId
µµd j
==
µµk m
currentUser
µµn y
.
µµy z
Id
µµz |
,
µµ| }
$strµµ~ ñ
)µµñ ó
;µµó ò
var
∂∂ 
	companies
∂∂ 
=
∂∂ 
await
∂∂ !
_unitOfWork
∂∂" -
.
∂∂- .

Repository
∂∂. 8
<
∂∂8 9
Company
∂∂9 @
>
∂∂@ A
(
∂∂A B
)
∂∂B C
.
∂∂C D
GetAllAsync
∂∂D O
(
∂∂O P
)
∂∂P Q
;
∂∂Q R
return
∑∑ 
applieds
∑∑ 
.
∑∑ 
AsQueryable
∑∑ '
(
∑∑' (
)
∑∑( )
.
∑∑) *
Join
∑∑* .
(
∑∑. /
	companies
∑∑/ 8
,
∑∑8 9
apply
∑∑: ?
=>
∑∑@ B
apply
∑∑C H
.
∑∑H I
RecruitmentPost
∑∑I X
.
∑∑X Y
	CompanyId
∑∑Y b
,
∑∑b c
company
∑∑d k
=>
∑∑l n
company
∑∑o v
.
∑∑v w
Id
∑∑w y
,
∑∑y z
(
∑∑{ |
apply∑∑| Å
,∑∑Å Ç
company∑∑É ä
)∑∑ä ã
=>∑∑å é
new∑∑è í#
JobAppliedViewModel∑∑ì ¶
{
∏∏ 
Id
ππ 
=
ππ 
apply
ππ 
.
ππ 
Id
ππ 
,
ππ 
RecruitmentPostId
∫∫ !
=
∫∫" #
apply
∫∫$ )
.
∫∫) *
RecruitmentPostId
∫∫* ;
,
∫∫; <
	CompanyId
ªª 
=
ªª 
company
ªª #
.
ªª# $
Id
ªª$ &
,
ªª& '
CompanyName
ºº 
=
ºº 
company
ºº %
.
ºº% &
CompanyName
ºº& 1
,
ºº1 2
CreatedDate
ΩΩ 
=
ΩΩ 
apply
ΩΩ #
.
ΩΩ# $
CreatedDate
ΩΩ$ /
,
ΩΩ/ 0
UpdatedDate
ææ 
=
ææ 
apply
ææ #
.
ææ# $
UpdatedDate
ææ$ /
,
ææ/ 0
Description
øø 
=
øø 
apply
øø #
.
øø# $
Description
øø$ /
,
øø/ 0
CVName
¿¿ 
=
¿¿ 
apply
¿¿ 
.
¿¿ 
UserCV
¿¿ %
.
¿¿% &
CVName
¿¿& ,
,
¿¿, -
UserCVId
¡¡ 
=
¡¡ 
apply
¡¡  
.
¡¡  !
UserCV
¡¡! '
.
¡¡' (
UserId
¡¡( .
,
¡¡. /
CVUrl
¬¬ 
=
¬¬ 
apply
¬¬ 
.
¬¬ 
UserCV
¬¬ $
.
¬¬$ %
CVUrl
¬¬% *
,
¬¬* +
JobTitle
√√ 
=
√√ 
apply
√√  
.
√√  !
RecruitmentPost
√√! 0
.
√√0 1
JobTitle
√√1 9
,
√√9 :
Status
ƒƒ 
=
ƒƒ 
apply
ƒƒ 
.
ƒƒ 
Status
ƒƒ %
,
ƒƒ% &
}
≈≈ 
)
≈≈ 
.
≈≈ 
ToList
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 	
public
»» 
async
»» 
Task
»» 
<
»» 
bool
»» 
>
»» 
	IsHasRole
»»  )
(
»») *"
ApplicationUserModel
»»* >
model
»»? D
)
»»D E
{
…… 	
var
   
currentRecruiter
    
=
  ! "
await
  # (
_unitOfWork
  ) 4
.
  4 5

Repository
  5 ?
<
  ? @
	Recruiter
  @ I
>
  I J
(
  J K
)
  K L
.
  L M!
FirstOrDefaultAsync
  M `
(
  ` a
item
  a e
=>
  f h
item
  i m
.
  m n
User
  n r
.
  r s
Username
  s {
==
  | ~
model   Ñ
.  Ñ Ö
Username  Ö ç
,  ç é
$str  è ò
)  ò ô
??
ÀÀ$ &
throw
ÀÀ' ,
new
ÀÀ- 0
EWException
ÀÀ1 <
(
ÀÀ< =
$str
ÀÀ= U
)
ÀÀU V
;
ÀÀV W
var
ÕÕ  
currentApplication
ÕÕ "
=
ÕÕ# $
await
ÕÕ% *
_unitOfWork
ÕÕ+ 6
.
ÕÕ6 7

Repository
ÕÕ7 A
<
ÕÕA B
Application
ÕÕB M
>
ÕÕM N
(
ÕÕN O
)
ÕÕO P
.
ÕÕP Q!
FirstOrDefaultAsync
ÕÕQ d
(
ÕÕd e
item
ÕÕe i
=>
ÕÕj l
item
ÕÕm q
.
ÕÕq r
Id
ÕÕr t
==
ÕÕu w
model
ÕÕx }
.
ÕÕ} ~
ApplicationIdÕÕ~ ã
)ÕÕã å
??
ŒŒ$ &
throw
ŒŒ' ,
new
ŒŒ- 0
EWException
ŒŒ1 <
(
ŒŒ< =
$str
ŒŒ= Z
)
ŒŒZ [
;
ŒŒ[ \
var
œœ $
currentRecruitmentPost
œœ &
=
œœ' (
await
œœ) .
_unitOfWork
œœ/ :
.
œœ: ;

Repository
œœ; E
<
œœE F
RecruitmentPost
œœF U
>
œœU V
(
œœV W
)
œœW X
.
œœX Y!
FirstOrDefaultAsync
œœY l
(
œœl m
item
œœm q
=>
œœr t
item
œœu y
.
œœy z
Id
œœz |
==
œœ} "
currentApplicationœœÄ í
.œœí ì!
RecruitmentPostIdœœì §
)œœ§ •
;œœ• ¶
return
—— $
currentRecruitmentPost
—— )
.
——) *
	CompanyId
——* 3
==
——4 6
currentRecruiter
——7 G
.
——G H
	CompanyId
——H Q
;
——Q R
}
““ 	
public
‘‘ 
async
‘‘ 
Task
‘‘ 
<
‘‘ 
bool
‘‘ 
>
‘‘ 
Update
‘‘  &
(
‘‘& '
Application
‘‘' 2
application
‘‘3 >
)
‘‘> ?
{
’’ 	
var
÷÷  
currentApplication
÷÷ "
=
÷÷# $
await
÷÷% *
_unitOfWork
÷÷+ 6
.
÷÷6 7

Repository
÷÷7 A
<
÷÷A B
Application
÷÷B M
>
÷÷M N
(
÷÷N O
)
÷÷O P
.
÷÷P Q!
FirstOrDefaultAsync
÷÷Q d
(
÷÷d e
item
÷÷e i
=>
÷÷j l
item
÷÷m q
.
÷÷q r
Id
÷÷r t
==
÷÷u w
application÷÷x É
.÷÷É Ñ
Id÷÷Ñ Ü
)÷÷Ü á
??
◊◊$ &
throw
◊◊' ,
new
◊◊- 0
EWException
◊◊1 <
(
◊◊< =
$str
◊◊= Z
)
◊◊Z [
;
◊◊[ \ 
currentApplication
ÿÿ 
.
ÿÿ 
UpdatedDate
ÿÿ *
=
ÿÿ+ ,
DateTimeOffset
ÿÿ- ;
.
ÿÿ; <
Now
ÿÿ< ?
;
ÿÿ? @ 
currentApplication
ŸŸ 
.
ŸŸ 
Description
ŸŸ *
=
ŸŸ+ ,
application
ŸŸ- 8
.
ŸŸ8 9
Description
ŸŸ9 D
;
ŸŸD E 
currentApplication
⁄⁄ 
.
⁄⁄ 
Status
⁄⁄ %
=
⁄⁄& '
application
⁄⁄( 3
.
⁄⁄3 4
Status
⁄⁄4 :
;
⁄⁄: ;
_unitOfWork
€€ 
.
€€ 

Repository
€€ "
<
€€" #
Application
€€# .
>
€€. /
(
€€/ 0
)
€€0 1
.
€€1 2
Update
€€2 8
(
€€8 9 
currentApplication
€€9 K
)
€€K L
;
€€L M
return
‹‹ 
await
‹‹ 
_unitOfWork
‹‹ $
.
‹‹$ %
SaveChangeAsync
‹‹% 4
(
‹‹4 5
)
‹‹5 6
;
‹‹6 7
}
›› 	
}
ﬁﬁ 
}ﬂﬂ ≈3
?D:\Dacntt2\Source\EW\EW.Service\Business\BlogCategoryService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
BlogCategoryService $
:% & 
IBlogCategoryService' ;
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
BlogCategoryService "
(" #
IUnitOfWork# .

unitOfWork/ 9
)9 :
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
BlogCategory &
>& '
Add( +
(+ ,
BlogCategory, 8
model9 >
)> ?
{ 	
var 
exist 
= 
await 
_unitOfWork )
.) *

Repository* 4
<4 5
BlogCategory5 A
>A B
(B C
)C D
.D E
FirstOrDefaultAsyncE X
(X Y
itemY ]
=>^ `
itema e
.e f
Namef j
==k m
modeln s
.s t
Namet x
)x y
;y z
if 
( 
exist 
is 
not 
null !
)! "
{ 
throw 
new 
EWException %
(% &
$str& Z
)Z [
;[ \
} 
model 
. 
CreatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
model 
. 
UpdatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
await 
_unitOfWork 
. 

Repository (
<( )
BlogCategory) 5
>5 6
(6 7
)7 8
.8 9
AddAsync9 A
(A B
modelB G
)G H
;H I
if 
( 
! 
( 
await 
_unitOfWork #
.# $
SaveChangeAsync$ 3
(3 4
)4 5
)5 6
)6 7
throw 
new 
EWException %
(% &
$str& C
)C D
;D E
return 
model 
; 
} 	
public 
async 
Task 
< 
bool 
> 
Delete  &
(& '
BlogCategory' 3
model4 9
)9 :
{   	
var!! 
exist!! 
=!! 
await!! 
_unitOfWork!! )
.!!) *

Repository!!* 4
<!!4 5
BlogCategory!!5 A
>!!A B
(!!B C
)!!C D
.!!D E
FirstOrDefaultAsync!!E X
(!!X Y
item!!Y ]
=>!!^ `
item!!a e
.!!e f
Id!!f h
==!!i k
model!!l q
.!!q r
Id!!r t
)!!t u
??"" 
throw"" $
new""% (
EWException"") 4
(""4 5
$str""5 Q
)""Q R
;""R S
_unitOfWork## 
.## 

Repository## "
<##" #
BlogCategory### /
>##/ 0
(##0 1
)##1 2
.##2 3
Delete##3 9
(##9 :
exist##: ?
)##? @
;##@ A
return$$ 
await$$ 
_unitOfWork$$ $
.$$$ %
SaveChangeAsync$$% 4
($$4 5
)$$5 6
;$$6 7
}%% 	
public'' 
async'' 
Task'' 
<'' 
IEnumerable'' %
<''% &
BlogCategory''& 2
>''2 3
>''3 4
GetAll''5 ;
(''; <
)''< =
{(( 	
var)) 
blogCategories)) 
=))  
await))! &
_unitOfWork))' 2
.))2 3

Repository))3 =
<))= >
BlogCategory))> J
>))J K
())K L
)))L M
.))M N
GetAllAsync))N Y
())Y Z
)))Z [
;))[ \
return** 
blogCategories** !
.**! "
OrderByDescending**" 3
(**3 4
item**4 8
=>**9 ;
item**< @
.**@ A
CreatedDate**A L
)**L M
.**M N
ToList**N T
(**T U
)**U V
;**V W
}++ 	
public-- 
async-- 
Task-- 
<-- 
BlogCategory-- &
>--& '
Update--( .
(--. /
BlogCategory--/ ;
model--< A
)--A B
{.. 	
var// 
exist// 
=// 
await// 
_unitOfWork// )
.//) *

Repository//* 4
<//4 5
BlogCategory//5 A
>//A B
(//B C
)//C D
.//D E
FirstOrDefaultAsync//E X
(//X Y
item//Y ]
=>//^ `
item//a e
.//e f
Id//f h
==//i k
model//l q
.//q r
Id//r t
)//t u
??00 
throw00  
new00! $
EWException00% 0
(000 1
$str001 M
)00M N
;00N O
exist11 
.11 
UpdatedDate11 
=11 
DateTimeOffset11  .
.11. /
Now11/ 2
;112 3
exist22 
.22 
Name22 
=22 
model22 
.22 
Name22 #
;22# $
exist33 
.33 
Description33 
=33 
model33  %
.33% &
Description33& 1
;331 2
_unitOfWork44 
.44 

Repository44 "
<44" #
BlogCategory44# /
>44/ 0
(440 1
)441 2
.442 3
Update443 9
(449 :
exist44: ?
)44? @
;44@ A
if55 
(55 
!55 
(55 
await55 
_unitOfWork55 #
.55# $
SaveChangeAsync55$ 3
(553 4
)554 5
)555 6
)556 7
throw66 
new66 
EWException66 %
(66% &
$str66& G
)66G H
;66H I
return77 
exist77 
;77 
}88 	
}99 
}:: Î2
7D:\Dacntt2\Source\EW\EW.Service\Business\BlogService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
BlogService 
: 
IBlogService +
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
BlogService 
( 
IUnitOfWork &

unitOfWork' 1
)1 2
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
Blog 
> 
Add  #
(# $
Blog$ (
blog) -
)- .
{ 	
blog 
. 
CreatedDate 
= 
DateTimeOffset -
.- .
Now. 1
;1 2
blog 
. 
UpdatedDate 
= 
DateTimeOffset -
.- .
Now. 1
;1 2
await 
_unitOfWork 
. 

Repository (
<( )
Blog) -
>- .
(. /
)/ 0
.0 1
AddAsync1 9
(9 :
blog: >
)> ?
;? @
if 
( 
! 
( 
await 
_unitOfWork #
.# $
SaveChangeAsync$ 3
(3 4
)4 5
)5 6
)6 7
throw 
new 
EWException %
(% &
$str& C
)C D
;D E
return 
blog 
; 
} 	
public 
async 
Task 
< 
bool 
> 
Delete  &
(& '
Blog' +
blog, 0
)0 1
{ 	
var 
exist 
= 
await 
_unitOfWork )
.) *

Repository* 4
<4 5
Blog5 9
>9 :
(: ;
); <
.< =
FirstOrDefaultAsync= P
(P Q
itemQ U
=>V X
itemY ]
.] ^
Id^ `
==a c
blogd h
.h i
Idi k
)k l
?? 
throw $
new% (
EWException) 4
(4 5
$str5 h
)h i
;i j
_unitOfWork 
. 

Repository "
<" #
Blog# '
>' (
(( )
)) *
.* +
Delete+ 1
(1 2
exist2 7
)7 8
;8 9
return 
await 
_unitOfWork $
.$ %
SaveChangeAsync% 4
(4 5
)5 6
;6 7
}   	
public"" 
async"" 
Task"" 
<"" 
Blog"" 
>"" 
Get""  #
(""# $
long""$ (
id"") +
)""+ ,
{## 	
return$$ 
await$$ 
_unitOfWork$$ $
.$$$ %

Repository$$% /
<$$/ 0
Blog$$0 4
>$$4 5
($$5 6
)$$6 7
.$$7 8
FirstOrDefaultAsync$$8 K
($$K L
item$$L P
=>$$Q S
item$$T X
.$$X Y
Id$$Y [
==$$\ ^
id$$_ a
,$$a b
$str$$c v
)$$v w
;$$w x
}%% 	
public'' 
async'' 
Task'' 
<'' 
IEnumerable'' %
<''% &
Blog''& *
>''* +
>''+ ,
GetAll''- 3
(''3 4
)''4 5
{(( 	
var)) 
blogs)) 
=)) 
await)) 
_unitOfWork)) )
.))) *

Repository))* 4
<))4 5
Blog))5 9
>))9 :
()): ;
))); <
.))< =
GetAllAsync))= H
())H I
$str))I \
)))\ ]
;))] ^
return** 
blogs** 
.** 
OrderByDescending** *
(*** +
item**+ /
=>**0 2
item**3 7
.**7 8
CreatedDate**8 C
)**C D
.**D E
ToList**E K
(**K L
)**L M
;**M N
}++ 	
public-- 
async-- 
Task-- 
<-- 
Blog-- 
>-- 
Update--  &
(--& '
Blog--' +
blog--, 0
)--0 1
{.. 	
var// 
exist// 
=// 
await// 
_unitOfWork// )
.//) *

Repository//* 4
<//4 5
Blog//5 9
>//9 :
(//: ;
)//; <
.//< =
FirstOrDefaultAsync//= P
(//P Q
item//Q U
=>//V X
item//Y ]
.//] ^
Id//^ `
==//a c
blog//d h
.//h i
Id//i k
)//k l
??00 
throw00 $
new00% (
EWException00) 4
(004 5
$str005 h
)00h i
;00i j
exist22 
.22 
Title22 
=22 
blog22 
.22 
Title22 $
;22$ %
exist33 
.33 
Content33 
=33 
blog33  
.33  !
Content33! (
;33( )
exist44 
.44 
BlogCategoryId44  
=44! "
blog44# '
.44' (
BlogCategoryId44( 6
;446 7
exist55 
.55 
UpdatedDate55 
=55 
DateTimeOffset55  .
.55. /
Now55/ 2
;552 3
_unitOfWork66 
.66 

Repository66 "
<66" #
Blog66# '
>66' (
(66( )
)66) *
.66* +
Update66+ 1
(661 2
exist662 7
)667 8
;668 9
if77 
(77 
!77 
(77 
await77 
_unitOfWork77 #
.77# $
SaveChangeAsync77$ 3
(773 4
)774 5
)775 6
)776 7
throw88 
new88 
EWException88 %
(88% &
$str88& G
)88G H
;88H I
return99 
exist99 
;99 
}:: 	
};; 
}<< á(
>D:\Dacntt2\Source\EW\EW.Service\Business\CertificateService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
CertificateService #
:$ %
ICertificateService& 9
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
CertificateService !
(! "
IUnitOfWork" -

unitOfWork. 8
)8 9
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
Certificate %
>% &
Add' *
(* +
Certificate+ 6
model7 <
)< =
{ 	
model 
. 
CreatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
model 
. 
UpdatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
await 
_unitOfWork 
. 

Repository (
<( )
Certificate) 4
>4 5
(5 6
)6 7
.7 8
AddAsync8 @
(@ A
modelA F
)F G
;G H
if 
( 
! 
await 
_unitOfWork "
." #
SaveChangeAsync# 2
(2 3
)3 4
)4 5
throw 
new 
EWException %
(% &
$str& D
)D E
;E F
return 
model 
; 
} 	
public 
async 
Task 
< 
bool 
> 
Delete  &
(& '
Certificate' 2
model3 8
)8 9
{ 	
var 
currentCertificate "
=# $
await% *
_unitOfWork+ 6
.6 7

Repository7 A
<A B
CertificateB M
>M N
(N O
)O P
.P Q
FirstOrDefaultAsyncQ d
(d e
iteme i
=>j l
itemm q
.q r
Idr t
==u w
modelx }
.} ~
Id	~ Ä
)
Ä Å
??( *
throw+ 0
new1 4
EWException5 @
(@ A
$strA ^
)^ _
;_ `
_unitOfWork 
. 

Repository "
<" #
Certificate# .
>. /
(/ 0
)0 1
.1 2
Delete2 8
(8 9
currentCertificate9 K
)K L
;L M
return 
await 
_unitOfWork $
.$ %
SaveChangeAsync% 4
(4 5
)5 6
;6 7
} 	
public!! 
async!! 
Task!! 
<!! 
bool!! 
>!! 
Update!!  &
(!!& '
Certificate!!' 2
model!!3 8
)!!8 9
{"" 	
var## 
currentCertificate## "
=### $
await##% *
_unitOfWork##+ 6
.##6 7

Repository##7 A
<##A B
Certificate##B M
>##M N
(##N O
)##O P
.##P Q
FirstOrDefaultAsync##Q d
(##d e
item##e i
=>##j l
item##m q
.##q r
Id##r t
==##u w
model##x }
.##} ~
Id	##~ Ä
)
##Ä Å
??$$( *
throw$$+ 0
new$$1 4
EWException$$5 @
($$@ A
$str$$A ^
)$$^ _
;$$_ `
currentCertificate%% 
.%% 
UpdatedDate%% *
=%%+ ,
DateTimeOffset%%- ;
.%%; <
Now%%< ?
;%%? @
currentCertificate&& 
.&& 
Description&& *
=&&+ ,
model&&- 2
.&&2 3
Description&&3 >
;&&> ?
currentCertificate'' 
.'' 
From'' #
=''$ %
model''& +
.''+ ,
From'', 0
;''0 1
currentCertificate(( 
.(( 
To(( !
=((" #
model(($ )
.(() *
To((* ,
;((, -
currentCertificate)) 
.)) 
CertificateName)) .
=))/ 0
model))1 6
.))6 7
CertificateName))7 F
;))F G
_unitOfWork** 
.** 

Repository** "
<**" #
Certificate**# .
>**. /
(**/ 0
)**0 1
.**1 2
Update**2 8
(**8 9
currentCertificate**9 K
)**K L
;**L M
return++ 
await++ 
_unitOfWork++ $
.++$ %
SaveChangeAsync++% 4
(++4 5
)++5 6
;++6 7
},, 	
}-- 
}.. ±2
8D:\Dacntt2\Source\EW\EW.Service\Business\ChartService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
ChartService 
: 
IChartService  -
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
ChartService 
( 
IUnitOfWork '

unitOfWork( 2
)2 3
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
IEnumerable %
<% &&
NumberApplicationViewModel& @
>@ A
>A B 
GetNumberApplicationC W
(W X
)X Y
{ 	
var 
applications 
= 
await $
_unitOfWork% 0
.0 1

Repository1 ;
<; <
Application< G
>G H
(H I
)I J
.J K
GetAllAsyncK V
(V W
)W X
;X Y
return 
applications 
.  
GroupBy  '
(' (
item( ,
=>- /
new0 3
{4 5
item6 :
.: ;
Status; A
}B C
)C D
.D E
SelectE K
(K L
rowL O
=>P R
newS V&
NumberApplicationViewModelW q
{ 
Type 
= 
row 
. 
Key 
. 
Status %
,% &
Number 
= 
row 
. 
Count "
(" #
x# $
=>% '
x( )
.) *
Status* 0
==1 3
row4 7
.7 8
Key8 ;
.; <
Status< B
)B C
} 
) 
; 
} 	
public 
async 
Task 
< 
IEnumerable %
<% & 
ChartResultViewModel& :
>: ;
>; <$
GetNumberRecruitmentPost= U
(U V
)V W
{ 	
var 
recruitmentPosts  
=! "
await# (
_unitOfWork) 4
.4 5

Repository5 ?
<? @
RecruitmentPost@ O
>O P
(P Q
)Q R
.R S
GetAllAsyncS ^
(^ _
)_ `
;` a
return 
recruitmentPosts #
. 
GroupBy 
( 
item 
=>  
new! $
{% &
item' +
.+ ,
CreatedDate, 7
.7 8
Year8 <
,< =
item> B
.B C
CreatedDateC N
.N O
MonthO T
,T U
itemV Z
.Z [
CreatedDate[ f
.f g
Dayg j
}k l
)l m
. 
Select 
( 
row 
=> 
new " 
ChartResultViewModel# 7
{   
Label!! 
=!! 
$"!! 
{!! 
row!! "
.!!" #
Key!!# &
.!!& '
Day!!' *
}!!* +
$str!!+ ,
{!!, -
row!!- 0
.!!0 1
Key!!1 4
.!!4 5
Month!!5 :
}!!: ;
$str!!; <
{!!< =
row!!= @
.!!@ A
Key!!A D
.!!D E
Year!!E I
}!!I J
"!!J K
,!!K L
Value"" 
="" 
row"" 
.""  
Count""  %
(""% &
)""& '
,""' (
}## 
)## 
.## 
Take## 
(## 
$num## 
)## 
.## 
ToList## "
(##" #
)### $
;##$ %
}$$ 	
public&& 
async&& 
Task&& 
<&& 
IEnumerable&& %
<&&% & 
ChartResultViewModel&&& :
>&&: ;
>&&; < 
GetRankingTechStacks&&= Q
(&&Q R
string&&R X
[&&X Y
]&&Y Z

techStacks&&[ e
)&&e f
{'' 	
var(( 
result(( 
=(( 
new(( 
List(( !
<((! " 
ChartResultViewModel((" 6
>((6 7
(((7 8
)((8 9
;((9 :
var)) 
recruitmentPosts))  
=))! "
await))# (
_unitOfWork))) 4
.))4 5

Repository))5 ?
<))? @
RecruitmentPost))@ O
>))O P
())P Q
)))Q R
.))R S
GetAllAsync))S ^
())^ _
)))_ `
;))` a
var** 
techOnPosts** 
=** 
recruitmentPosts** .
.**. /
Select**/ 5
(**5 6
item**6 :
=>**; =
item**> B
.**B C

TechStacks**C M
)**M N
.**N O
ToList**O U
(**U V
)**V W
;**W X
for++ 
(++ 
var++ 
i++ 
=++ 
$num++ 
;++ 
i++ 
<++ 

techStacks++  *
.++* +
Length+++ 1
;++1 2
i++3 4
++++4 6
)++6 7
{,, 
result-- 
.-- 
Add-- 
(-- 
new--  
ChartResultViewModel-- 3
{.. 
Label// 
=// 

techStacks// &
[//& '
i//' (
]//( )
,//) *
Value00 
=00 
techOnPosts00 '
.00' (
Count00( -
(00- .
item00. 2
=>003 5
item006 :
.00: ;
Contains00; C
(00C D

techStacks00D N
[00N O
i00O P
]00P Q
)00Q R
)00R S
}11 
)11 
;11 
}22 
return33 
result33 
.33 
OrderByDescending33 +
(33+ ,
item33, 0
=>331 3
item334 8
.338 9
Value339 >
)33> ?
;33? @
}44 	
}55 
}66 •k
:D:\Dacntt2\Source\EW\EW.Service\Business\CompanyService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
CompanyService 
:  !
ICompanyService" 1
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public 
CompanyService 
( 
IUnitOfWork )

unitOfWork* 4
)4 5
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
Company !
>! "
Find# '
(' (
Company( /
company0 7
)7 8
{ 	
return 
await 
_unitOfWork $
.$ %

Repository% /
</ 0
Company0 7
>7 8
(8 9
)9 :
.: ;
FirstOrDefaultAsync; N
(N O
itemO S
=>T V
itemW [
.[ \
Email\ a
==b d
companye l
.l m
Emailm r
||s u
companyv }
.} ~
PhoneNumber	~ â
==
ä å
item
ç ë
.
ë í
PhoneNumber
í ù
||
û †
company
° ®
.
® ©
Id
© ´
==
¨ Æ
item
Ø ≥
.
≥ ¥
Id
¥ ∂
)
∂ ∑
;
∑ ∏
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Company& -
>- .
>. /
GetCompanies0 <
(< =
)= >
{ 	
return 
await 
_unitOfWork $
.$ %

Repository% /
</ 0
Company0 7
>7 8
(8 9
)9 :
.: ;
GetAllAsync; F
(F G
)G H
;H I
} 	
public 
async 
Task 
< 
Company !
>! "
GetCompanyByUser# 3
(3 4
User4 8
user9 =
)= >
{ 	
var 
exist 
= 
await 
_unitOfWork )
.) *

Repository* 4
<4 5
User5 9
>9 :
(: ;
); <
.< =
FirstOrDefaultAsync= P
(P Q
uQ R
=>S U
uV W
.W X
IdX Z
==[ ]
user^ b
.b c
Idc e
)e f
;f g
var   
companyRecruiter    
=  ! "
await  # (
_unitOfWork  ) 4
.  4 5

Repository  5 ?
<  ? @
	Recruiter  @ I
>  I J
(  J K
)  K L
.  L M
FirstOrDefaultAsync  M `
(  ` a
c  a b
=>  c e
c  f g
.  g h
UserId  h n
==  o q
exist  r w
.  w x
Id  x z
,  z {
includeProperties	  | ç
:
  ç é
$str
  è ò
)
  ò ô
;
  ô ö
return!! 
companyRecruiter!! #
.!!# $
Company!!$ +
;!!+ ,
}"" 	
public## 
async## 
Task## 
<## 
bool## 
>## $
UpdateInformationCompany##  8
(##8 9
UpdateCompanyModel##9 K
model##L Q
)##Q R
{$$ 	
var%% 
existCompany%% 
=%% 
await%% $
_unitOfWork%%% 0
.%%0 1

Repository%%1 ;
<%%; <
Company%%< C
>%%C D
(%%D E
)%%E F
.%%F G
FirstOrDefaultAsync%%G Z
(%%Z [
item%%[ _
=>%%` b
item%%c g
.%%g h
Id%%h j
==%%k m
model%%n s
.%%s t
Id%%t v
)%%v w
??&&$ &
throw&&' ,
new&&- 0
EWException&&1 <
(&&< =
$str&&= o
)&&o p
;&&p q
existCompany(( 
.(( 
CompanyName(( $
=((% &
model((' ,
.((, -
CompanyName((- 8
;((8 9
existCompany)) 
.)) 
Address))  
=))! "
model))# (
.))( )
Address))) 0
;))0 1
existCompany** 
.** 
Status** 
=**  !
model**" '
.**' (
Status**( .
;**. /
existCompany++ 
.++ 
UpdatedDate++ $
=++% &
DateTimeOffset++' 5
.++5 6
Now++6 9
;++9 :
existCompany,, 
.,, 
	TaxNumber,, "
=,,# $
model,,% *
.,,* +
	TaxNumber,,+ 4
;,,4 5
existCompany-- 
.-- 
CompanyType-- $
=--% &
model--' ,
.--, -
CompanyType--- 8
;--8 9
existCompany.. 
... 
TeamSize.. !
=.." #
model..$ )
...) *
TeamSize..* 2
;..2 3
existCompany// 
.// 
Country//  
=//! "
model//# (
.//( )
Country//) 0
;//0 1
existCompany00 
.00 
Description00 $
=00% &
model00' ,
.00, -
Description00- 8
;008 9
existCompany11 
.11 
Featured11 !
=11" #
model11$ )
.11) *
Featured11* 2
;112 3
_unitOfWork22 
.22 

Repository22 "
<22" #
Company22# *
>22* +
(22+ ,
)22, -
.22- .
Update22. 4
(224 5
existCompany225 A
)22A B
;22B C
return33 
await33 
_unitOfWork33 $
.33$ %
SaveChangeAsync33% 4
(334 5
)335 6
;336 7
}44 	
public66 
async66 
Task66 
<66 
Company66 !
>66! "

GetCompany66# -
(66- .
Company66. 5
model666 ;
)66; <
{77 	
return88 
await88 
_unitOfWork88 $
.88$ %

Repository88% /
<88/ 0
Company880 7
>887 8
(888 9
)889 :
.88: ;
FirstOrDefaultAsync88; N
(88N O
item88O S
=>88T V
item88W [
.88[ \
Id88\ ^
==88_ a
model88b g
.88g h
Id88h j
||88k m
model88n s
.88s t
Email88t y
==88z |
item	88} Å
.
88Å Ç
Email
88Ç á
)
88á à
;
88à â
}99 	
public;; 
async;; 
Task;; 
<;; 
Company;; !
>;;! "

AddCompany;;# -
(;;- .
Company;;. 5
model;;6 ;
);;; <
{<< 	
var== 

newCompany== 
=== 
new==  
Company==! (
{>> 
Email?? 
=?? 
model?? 
.?? 
Email?? #
,??# $
PhoneNumber@@ 
=@@ 
model@@ #
.@@# $
PhoneNumber@@$ /
,@@/ 0
CompanyNameAA 
=AA 
modelAA #
.AA# $
CompanyNameAA$ /
,AA/ 0
AddressBB 
=BB 
modelBB 
.BB  
AddressBB  '
,BB' (
StatusCC 
=CC 
EStatusRecruiterCC )
.CC) *
PendingCC* 1
,CC1 2
UpdatedDateDD 
=DD 
DateTimeOffsetDD ,
.DD, -
NowDD- 0
,DD0 1
CreatedDateEE 
=EE 
DateTimeOffsetEE ,
.EE, -
NowEE- 0
,EE0 1
	TaxNumberFF 
=FF 
modelFF !
.FF! "
	TaxNumberFF" +
,FF+ ,
	AvatarUrlGG 
=GG 

ConstaintsGG &
.GG& '
STRING_BLANKGG' 3
,GG3 4
CountryHH 
=HH 

ConstaintsHH $
.HH$ %
COUNTRY_DEFAULTHH% 4
,HH4 5
TeamSizeII 
=II 
	ETeamSizeII $
.II$ %
ZeroTo50II% -
,II- .
CompanyTypeJJ 
=JJ 
ECompanyTypeJJ *
.JJ* +
ProductJJ+ 2
,JJ2 3
DescriptionKK 
=KK 

ConstaintsKK (
.KK( )
COUNTRY_DEFAULTKK) 8
,KK8 9
FeaturedLL 
=LL 
modelLL  
.LL  !
FeaturedLL! )
,LL) *
}MM 
;MM 
awaitNN 
_unitOfWorkNN 
.NN 

RepositoryNN (
<NN( )
CompanyNN) 0
>NN0 1
(NN1 2
)NN2 3
.NN3 4
AddAsyncNN4 <
(NN< =

newCompanyNN= G
)NNG H
;NNH I
ifOO 
(OO 
!OO 
awaitOO 
_unitOfWorkOO "
.OO" #
SaveChangeAsyncOO# 2
(OO2 3
)OO3 4
)OO4 5
throwPP 
newPP 
EWExceptionPP %
(PP% &
$strPP& A
)PPA B
;PPB C
returnQQ 

newCompanyQQ 
;QQ 
}RR 	
publicTT 
asyncTT 
TaskTT 
<TT 
boolTT 
>TT 
UploadAvatarCompanyTT  3
(TT3 4
CompanyTT4 ;
companyTT< C
)TTC D
{UU 	
varVV 
existVV 
=VV 
awaitVV 
_unitOfWorkVV )
.VV) *

RepositoryVV* 4
<VV4 5
CompanyVV5 <
>VV< =
(VV= >
)VV> ?
.VV? @
FirstOrDefaultAsyncVV@ S
(VVS T
itemVVT X
=>VVY [
itemVV\ `
.VV` a
IdVVa c
==VVd f
companyVVg n
.VVn o
IdVVo q
)VVq r
;VVr s
existWW 
.WW 
	AvatarUrlWW 
=WW 
companyWW %
.WW% &
	AvatarUrlWW& /
;WW/ 0
existXX 
.XX 
UpdatedDateXX 
=XX 
DateTimeOffsetXX  .
.XX. /
NowXX/ 2
;XX2 3
_unitOfWorkYY 
.YY 

RepositoryYY "
<YY" #
CompanyYY# *
>YY* +
(YY+ ,
)YY, -
.YY- .
UpdateYY. 4
(YY4 5
existYY5 :
)YY: ;
;YY; <
returnZZ 
awaitZZ 
_unitOfWorkZZ $
.ZZ$ %
SaveChangeAsyncZZ% 4
(ZZ4 5
)ZZ5 6
;ZZ6 7
}[[ 	
public]] 
async]] 
Task]] 
<]] 
IEnumerable]] %
<]]% &
TopComapnyModel]]& 5
>]]5 6
>]]6 7
GetTopCompanies]]8 G
(]]G H
)]]H I
{^^ 	
var__ 
	companies__ 
=__ 
await__ !
_unitOfWork__" -
.__- .

Repository__. 8
<__8 9
Company__9 @
>__@ A
(__A B
)__B C
.__C D
GetAsync__D L
(__L M
item__M Q
=>__R T
item__U Y
.__Y Z
Status__Z `
==__a c
EStatusRecruiter__d t
.__t u
Active__u {
)__{ |
;__| }
var`` 
recruitmentPosts``  
=``! "
await``# (
_unitOfWork``) 4
.``4 5

Repository``5 ?
<``? @
RecruitmentPost``@ O
>``O P
(``P Q
)``Q R
.``R S
GetAllAsync``S ^
(``^ _
)``_ `
;``` a
varaa 
resultaa 
=aa 
newaa 
Listaa !
<aa! "
TopComapnyModelaa" 1
>aa1 2
(aa2 3
)aa3 4
;aa4 5
foreachbb 
(bb 
varbb 
companybb  
inbb! #
	companiesbb$ -
)bb- .
{cc 
vardd 

JobsHiringdd 
=dd  
recruitmentPostsdd! 1
.dd1 2
Wheredd2 7
(dd7 8
itemdd8 <
=>dd= ?
itemdd@ D
.ddD E
	CompanyIdddE N
==ddO Q
companyddR Y
.ddY Z
IdddZ \
)dd\ ]
.dd] ^
ToListdd^ d
(ddd e
)dde f
;ddf g
resultee 
.ee 
Addee 
(ee 
newee 
TopComapnyModelee .
{ff 
Idgg 
=gg 
companygg  
.gg  !
Idgg! #
,gg# $
CompanyNamehh 
=hh  !
companyhh" )
.hh) *
CompanyNamehh* 5
,hh5 6
	AvatarUrlii 
=ii 
companyii  '
.ii' (
	AvatarUrlii( 1
,ii1 2

JobsHiringjj 
=jj  

JobsHiringjj! +
.jj+ ,
Countjj, 1
,jj1 2
CompanyTypekk 
=kk  !
companykk" )
.kk) *
CompanyTypekk* 5
,kk5 6
Featuredll 
=ll 
companyll &
.ll& '
Featuredll' /
,ll/ 0
}mm 
)mm 
;mm 
}nn 
returnoo 
resultoo 
;oo 
}pp 	
}qq 
}rr ≈'
<D:\Dacntt2\Source\EW\EW.Service\Business\EducationService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
EducationService !
:" #
IEducationService$ 5
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
EducationService 
(  
IUnitOfWork  +

unitOfWork, 6
)6 7
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
	Education #
># $
Add% (
(( )
	Education) 2
model3 8
)8 9
{ 	
model 
. 
CreatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
model 
. 
UpdatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
await 
_unitOfWork 
. 

Repository (
<( )
	Education) 2
>2 3
(3 4
)4 5
.5 6
AddAsync6 >
(> ?
model? D
)D E
;E F
if 
( 
! 
await 
_unitOfWork "
." #
SaveChangeAsync# 2
(2 3
)3 4
)4 5
throw 
new 
EWException %
(% &
$str& B
)B C
;C D
return 
model 
; 
} 	
public 
async 
Task 
< 
bool 
> 
Delete  &
(& '
	Education' 0
model1 6
)6 7
{ 	
var 
currentEducation  
=! "
await# (
_unitOfWork) 4
.4 5

Repository5 ?
<? @
	Education@ I
>I J
(J K
)K L
.L M
FirstOrDefaultAsyncM `
(` a
itema e
=>f h
itemi m
.m n
Idn p
==q s
modelt y
.y z
Idz |
)| }
??$ &
throw' ,
new- 0
EWException1 <
(< =
$str= X
)X Y
;Y Z
_unitOfWork 
. 

Repository "
<" #
	Education# ,
>, -
(- .
). /
./ 0
Delete0 6
(6 7
currentEducation7 G
)G H
;H I
return 
await 
_unitOfWork $
.$ %
SaveChangeAsync% 4
(4 5
)5 6
;6 7
} 	
public!! 
async!! 
Task!! 
<!! 
bool!! 
>!! 
Update!!  &
(!!& '
	Education!!' 0
model!!1 6
)!!6 7
{"" 	
var## 
currentEducation##  
=##! "
await### (
_unitOfWork##) 4
.##4 5

Repository##5 ?
<##? @
	Education##@ I
>##I J
(##J K
)##K L
.##L M
FirstOrDefaultAsync##M `
(##` a
item##a e
=>##f h
item##i m
.##m n
Id##n p
==##q s
model##t y
.##y z
Id##z |
)##| }
??$$$ &
throw$$' ,
new$$- 0
EWException$$1 <
($$< =
$str$$= X
)$$X Y
;$$Y Z
currentEducation&& 
.&& 
UpdatedDate&& (
=&&) *
DateTimeOffset&&+ 9
.&&9 :
Now&&: =
;&&= >
currentEducation'' 
.'' 
Description'' (
='') *
model''+ 0
.''0 1
Description''1 <
;''< =
currentEducation(( 
.(( 
From(( !
=((" #
model(($ )
.(() *
From((* .
;((. /
currentEducation)) 
.)) 
To)) 
=))  !
model))" '
.))' (
To))( *
;))* +
currentEducation** 
.** 
OrgName** $
=**% &
model**' ,
.**, -
OrgName**- 4
;**4 5
_unitOfWork++ 
.++ 

Repository++ "
<++" #
	Education++# ,
>++, -
(++- .
)++. /
.++/ 0
Update++0 6
(++6 7
currentEducation++7 G
)++G H
;++H I
return,, 
await,, 
_unitOfWork,, $
.,,$ %
SaveChangeAsync,,% 4
(,,4 5
),,5 6
;,,6 7
}-- 	
}.. 
}// ä
8D:\Dacntt2\Source\EW\EW.Service\Business\EmailService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public		 

class		 
EmailService		 
:		 
IEmailService		  -
{

 
private 
readonly 
EmailConfig $
_emailConfig% 1
;1 2
public 
EmailService 
( 
IOptions $
<$ %
EmailConfig% 0
>0 1
emailConfig2 =
)= >
{ 	
_emailConfig 
= 
emailConfig &
.& '
Value' ,
;, -
} 	
public 
async 
Task 
	SendEmail #
(# $
EmailDataModel$ 2
data3 7
)7 8
{ 	
MailMessage 
mail 
= 
new "
(" #
)# $
;$ %

SmtpClient 
server 
= 
new  #
(# $
_emailConfig$ 0
.0 1
Mail1 5
)5 6
;6 7
mail 
. 
From 
= 
new 
MailAddress '
(' (
_emailConfig( 4
.4 5
Mail5 9
,9 :
$str; C
)C D
;D E
mail 
. 
Subject 
= 
data 
.  
Subject  '
;' (
mail 
. 
To 
. 
Add 
( 
data 
. 
ToEmail $
)$ %
;% &
mail 
. 
Body 
= 
data 
. 
Body !
;! "
mail 
. 

IsBodyHtml 
= 
true "
;" #
server 
. 
Host 
= 
_emailConfig &
.& '
Host' +
;+ ,
server 
. 
Port 
= 
_emailConfig &
.& '
Port' +
;+ ,
server 
. !
UseDefaultCredentials (
=) *
false+ 0
;0 1
server 
. 
Credentials 
=  
new! $
NetworkCredential% 6
(6 7
userName7 ?
:? @
_emailConfigA M
.M N
MailN R
,R S
passwordT \
:\ ]
_emailConfig^ j
.j k
Passwordk s
)s t
;t u
server 
. 
	EnableSsl 
= 
true #
;# $
await 
server 
. 
SendMailAsync &
(& '
mail' +
)+ ,
;, -
}   	
}!! 
}""  `
:D:\Dacntt2\Source\EW\EW.Service\Business\ProfileService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{		 
public

 

class

 
ProfileService

 
:

  !
IProfileSerivce

" 1
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public 
ProfileService 
( 
IUnitOfWork )

unitOfWork* 4
)4 5
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
Profile !
>! "

GetProfile# -
(- .
User. 2
user3 7
)7 8
{ 	
var 
currentUser 
= 
await #
_unitOfWork$ /
./ 0

Repository0 :
<: ;
User; ?
>? @
(@ A
)A B
.B C
FirstOrDefaultAsyncC V
(V W
itemW [
=>\ ^
item_ c
.c d
Usernamed l
==m o
userp t
.t u
Usernameu }
)} ~
;~ 
return 
await 
_unitOfWork $
.$ %

Repository% /
</ 0
Profile0 7
>7 8
(8 9
)9 :
.: ;
FirstOrDefaultAsync; N
(N O
itemO S
=>T V
itemW [
.[ \
UserId\ b
==c e
currentUserf q
.q r
Idr t
,t u
$str	v §
)
§ •
;
• ¶
} 	
public 
async 
Task 
< 
IEnumerable %
<% &'
ProfileOpenForWorkViewModel& A
>A B
>B C"
GetProfileOpenForWorksD Z
(Z [
)[ \
{ 	
var 

candidates 
= 
await "
_unitOfWork# .
.. /

Repository/ 9
<9 :
Profile: A
>A B
(B C
)C D
.D E
GetAsyncE M
(M N
itemN R
=>S U
itemV Z
.Z [
IsOpenForWork[ h
,h i
$strj p
)p q
;q r
var 
cvsFeatured 
= 
await #
_unitOfWork$ /
./ 0

Repository0 :
<: ;
UserCV; A
>A B
(B C
)C D
.D E
GetAsyncE M
(M N
itemN R
=>S U
itemV Z
.Z [
Featured[ c
)c d
;d e
var 
result 
= 
new 
List !
<! "'
ProfileOpenForWorkViewModel" =
>= >
(> ?
)? @
;@ A
foreach 
( 
var 
profile  
in! #

candidates$ .
). /
{ 
var 
cvFeaturedOfProfile '
=( )
cvsFeatured* 5
.5 6
FirstOrDefault6 D
(D E
itemE I
=>J L
itemM Q
.Q R
UserIdR X
==Y [
profile\ c
.c d
UserIdd j
)j k
;k l
if   
(   
cvFeaturedOfProfile   '
is  ( *
null  + /
)  / 0
continue!! 
;!! 
result"" 
."" 
Add"" 
("" 
new"" '
ProfileOpenForWorkViewModel"" :
{## 
UserId$$ 
=$$ 
profile$$ $
.$$$ %
UserId$$% +
,$$+ ,
FullName%% 
=%% 
profile%% &
.%%& '
User%%' +
?%%+ ,
.%%, -
FullName%%- 5
??%%6 8
$str%%9 ;
,%%; <
Address&& 
=&& 
profile&& %
.&&% &
Address&&& -
,&&- .
Linkedin'' 
='' 
profile'' &
.''& '
Linkedin''' /
,''/ 0
Github(( 
=(( 
profile(( $
.(($ %
Github((% +
,((+ ,
EmailContact))  
=))! "
profile))# *
.))* +
EmailContact))+ 7
,))7 8
PhoneNumber** 
=**  !
profile**" )
.**) *
PhoneNumber*** 5
,**5 6
	Objective++ 
=++ 
profile++  '
.++' (
	Objective++( 1
,++1 2
Skill,, 
=,, 
profile,, #
.,,# $
Skills,,$ *
,,,* +
CVId-- 
=-- 
cvFeaturedOfProfile-- .
.--. /
Id--/ 1
,--1 2
CVName.. 
=.. 
cvFeaturedOfProfile.. 0
...0 1
CVName..1 7
,..7 8
CVUrl// 
=// 
cvFeaturedOfProfile// /
./// 0
CVUrl//0 5
,//5 6
}00 
)00 
;00 
}11 
return22 
result22 
;22 
}33 	
public55 
async55 
Task55 
<55 
Profile55 !
>55! "
InitProfile55# .
(55. /
User55/ 3
user554 8
)558 9
{66 	
var77 
currentUser77 
=77 
await77 #
_unitOfWork77$ /
.77/ 0

Repository770 :
<77: ;
User77; ?
>77? @
(77@ A
)77A B
.77B C
FirstOrDefaultAsync77C V
(77V W
item77W [
=>77\ ^
item77_ c
.77c d
Username77d l
==77m o
user77p t
.77t u
Username77u }
)77} ~
;77~ 
var88 

newProfile88 
=88 
new88  
Profile88! (
{99 
UserId:: 
=:: 
currentUser:: $
.::$ %
Id::% '
,::' (
Address;; 
=;; 

Constaints;; $
.;;$ %
STRING_BLANK;;% 1
,;;1 2
Github<< 
=<< 

Constaints<< #
.<<# $
STRING_BLANK<<$ 0
,<<0 1
Linkedin== 
=== 

Constaints== %
.==% &
STRING_BLANK==& 2
,==2 3
PhoneNumber>> 
=>> 

Constaints>> (
.>>( )
STRING_BLANK>>) 5
,>>5 6
EmailContact?? 
=?? 
currentUser?? *
.??* +
Email??+ 0
,??0 1
	Objective@@ 
=@@ 

Constaints@@ &
.@@& '
STRING_BLANK@@' 3
,@@3 4
SkillsAA 
=AA 

ConstaintsAA #
.AA# $
STRING_BLANKAA$ 0
,AA0 1
IsOpenForWorkBB 
=BB 
falseBB  %
,BB% &
}CC 
;CC 
awaitDD 
_unitOfWorkDD 
.DD 

RepositoryDD (
<DD( )
ProfileDD) 0
>DD0 1
(DD1 2
)DD2 3
.DD3 4
AddAsyncDD4 <
(DD< =

newProfileDD= G
)DDG H
;DDH I
ifEE 
(EE 
!EE 
awaitEE 
_unitOfWorkEE "
.EE" #
SaveChangeAsyncEE# 2
(EE2 3
)EE3 4
)EE4 5
{FF 
throwGG 
newGG 
EWExceptionGG %
(GG% &
$strGG& B
)GGB C
;GGC D
}HH 

newProfileII 
.II 
CertificatesII #
=II$ %
newII& )
ListII* .
<II. /
CertificateII/ :
>II: ;
(II; <
)II< =
;II= >

newProfileJJ 
.JJ 
ProjectsJJ 
=JJ  !
newJJ" %
ListJJ& *
<JJ* +
ProjectJJ+ 2
>JJ2 3
(JJ3 4
)JJ4 5
;JJ5 6

newProfileKK 
.KK 

EducationsKK !
=KK" #
newKK$ '
ListKK( ,
<KK, -
	EducationKK- 6
>KK6 7
(KK7 8
)KK8 9
;KK9 :

newProfileLL 
.LL 
WorkHistoryLL "
=LL# $
newLL% (
ListLL) -
<LL- .
WorkHistoryLL. 9
>LL9 :
(LL: ;
)LL; <
;LL< =
returnMM 

newProfileMM 
;MM 
}NN 	
publicPP 
asyncPP 
TaskPP 
<PP 
boolPP 
>PP 
UpdateProfilePP  -
(PP- .
ProfilePP. 5
profilePP6 =
)PP= >
{QQ 	
varRR 
currentProfileRR 
=RR  
awaitRR! &
_unitOfWorkRR' 2
.RR2 3

RepositoryRR3 =
<RR= >
ProfileRR> E
>RRE F
(RRF G
)RRG H
.RRH I
FirstOrDefaultAsyncRRI \
(RR\ ]
itemRR] a
=>RRb d
itemRRe i
.RRi j
IdRRj l
==RRm o
profileRRp w
.RRw x
IdRRx z
)RRz {
;RR{ |
varSS 
currentUserSS 
=SS 
awaitSS #
_unitOfWorkSS$ /
.SS/ 0

RepositorySS0 :
<SS: ;
UserSS; ?
>SS? @
(SS@ A
)SSA B
.SSB C
FirstOrDefaultAsyncSSC V
(SSV W
itemSSW [
=>SS\ ^
itemSS_ c
.SSc d
IdSSd f
==SSg i
profileSSj q
.SSq r
UserIdSSr x
)SSx y
;SSy z
ifTT 
(TT 
currentProfileTT 
isTT !
nullTT" &
||TT' )
currentUserTT* 5
isTT6 8
nullTT9 =
)TT= >
{UU 
throwVV 
newVV 
EWExceptionVV %
(VV% &
$strVV& J
)VVJ K
;VVK L
}WW 
currentUserXX 
.XX 
PhoneNumberXX #
=XX$ %
profileXX& -
.XX- .
PhoneNumberXX. 9
;XX9 :
currentProfileYY 
.YY 
AddressYY "
=YY# $
profileYY% ,
.YY, -
AddressYY- 4
;YY4 5
currentProfileZZ 
.ZZ 
GithubZZ !
=ZZ" #
profileZZ$ +
.ZZ+ ,
GithubZZ, 2
;ZZ2 3
currentProfile[[ 
.[[ 
Linkedin[[ #
=[[$ %
profile[[& -
.[[- .
Linkedin[[. 6
;[[6 7
currentProfile\\ 
.\\ 
PhoneNumber\\ &
=\\' (
profile\\) 0
.\\0 1
PhoneNumber\\1 <
;\\< =
currentProfile]] 
.]] 
EmailContact]] '
=]]( )
profile]]* 1
.]]1 2
EmailContact]]2 >
;]]> ?
currentProfile^^ 
.^^ 
	Objective^^ $
=^^% &
profile^^' .
.^^. /
	Objective^^/ 8
;^^8 9
currentProfile__ 
.__ 
Skills__ !
=__" #
profile__$ +
.__+ ,
Skills__, 2
;__2 3
currentProfile`` 
.`` 
IsOpenForWork`` (
=``) *
profile``+ 2
.``2 3
IsOpenForWork``3 @
;``@ A
_unitOfWorkaa 
.aa 

Repositoryaa "
<aa" #
Useraa# '
>aa' (
(aa( )
)aa) *
.aa* +
Updateaa+ 1
(aa1 2
currentUseraa2 =
)aa= >
;aa> ?
_unitOfWorkbb 
.bb 

Repositorybb "
<bb" #
Profilebb# *
>bb* +
(bb+ ,
)bb, -
.bb- .
Updatebb. 4
(bb4 5
currentProfilebb5 C
)bbC D
;bbD E
returncc 
awaitcc 
_unitOfWorkcc $
.cc$ %
SaveChangeAsynccc% 4
(cc4 5
)cc5 6
;cc6 7
}dd 	
}ee 
}ff ‘(
:D:\Dacntt2\Source\EW\EW.Service\Business\ProjectService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
ProjectService 
:  !
IProjectService" 1
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
ProjectService 
( 
IUnitOfWork )

unitOfWork* 4
)4 5
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
Project !
>! "
Add# &
(& '
Project' .
model/ 4
)4 5
{ 	
model 
. 
CreatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
model 
. 
UpdatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
await 
_unitOfWork 
. 

Repository (
<( )
Project) 0
>0 1
(1 2
)2 3
.3 4
AddAsync4 <
(< =
model= B
)B C
;C D
if 
( 
await 
_unitOfWork !
.! "
SaveChangeAsync" 1
(1 2
)2 3
==4 6
false7 <
)< =
throw 
new 
EWException %
(% &
$str& @
)@ A
;A B
return 
model 
; 
} 	
public 
async 
Task 
< 
bool 
> 
Delete  &
(& '
Project' .
model/ 4
)4 5
{ 	
var 
currentProject 
=  
await! &
_unitOfWork' 2
.2 3

Repository3 =
<= >
Project> E
>E F
(F G
)G H
.H I
FirstOrDefaultAsyncI \
(\ ]
item] a
=>b d
iteme i
.i j
Idj l
==m o
modelp u
.u v
Idv x
)x y
??$ &
throw' ,
new- 0
EWException1 <
(< =
$str= V
)V W
;W X
_unitOfWork 
. 

Repository "
<" #
Project# *
>* +
(+ ,
), -
.- .
Delete. 4
(4 5
currentProject5 C
)C D
;D E
return 
await 
_unitOfWork $
.$ %
SaveChangeAsync% 4
(4 5
)5 6
;6 7
} 	
public!! 
async!! 
Task!! 
<!! 
bool!! 
>!! 
Update!!  &
(!!& '
Project!!' .
model!!/ 4
)!!4 5
{"" 	
var## 
currentProject## 
=##  
await##! &
_unitOfWork##' 2
.##2 3

Repository##3 =
<##= >
Project##> E
>##E F
(##F G
)##G H
.##H I
FirstOrDefaultAsync##I \
(##\ ]
item##] a
=>##b d
item##e i
.##i j
Id##j l
==##m o
model##p u
.##u v
Id##v x
)##x y
??$$$ &
throw$$' ,
new$$- 0
EWException$$1 <
($$< =
$str$$= V
)$$V W
;$$W X
currentProject&& 
.&& 
UpdatedDate&& &
=&&' (
DateTimeOffset&&) 7
.&&7 8
Now&&8 ;
;&&; <
currentProject'' 
.'' 
Description'' &
=''' (
model'') .
.''. /
Description''/ :
;'': ;
currentProject(( 
.(( 
From(( 
=((  !
model((" '
.((' (
From((( ,
;((, -
currentProject)) 
.)) 
To)) 
=)) 
model))  %
.))% &
To))& (
;))( )
currentProject** 
.** 
ProjectName** &
=**' (
model**) .
.**. /
ProjectName**/ :
;**: ;
currentProject++ 
.++ 
CustomerName++ '
=++( )
model++* /
.++/ 0
CustomerName++0 <
;++< =
_unitOfWork,, 
.,, 

Repository,, "
<,," #
Project,,# *
>,,* +
(,,+ ,
),,, -
.,,- .
Update,,. 4
(,,4 5
currentProject,,5 C
),,C D
;,,D E
return-- 
await-- 
_unitOfWork-- $
.--$ %
SaveChangeAsync--% 4
(--4 5
)--5 6
;--6 7
}.. 	
}// 
}00 »∆
<D:\Dacntt2\Source\EW\EW.Service\Business\RecruiterService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
RecruiterService !
:" #
IRecruiterService$ 5
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IUserService %
_userService& 2
;2 3
public 
RecruiterService 
(  
IUnitOfWork 

unitOfWork "
," #
IUserService 
userService $
) 	
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
_userService 
= 
userService &
;& '
} 	
public 
async 
Task 
< 
bool 
> 
AddNewRecruiter  /
(/ 0"
RegisterRecruiterModel0 F
modelG L
)L M
{ 	
var 
exist 
= 
await 
_unitOfWork )
.) *

Repository* 4
<4 5
Company5 <
>< =
(= >
)> ?
.? @
FirstOrDefaultAsync@ S
(S T
itemT X
=>Y [
item\ `
.` a
Emaila f
==g i
modelj o
.o p
Emailp u
||v x
modely ~
.~ 
PhoneNumber	 ä
==
ã ç
item
é í
.
í ì
PhoneNumber
ì û
)
û ü
;
ü †
if 
( 
exist 
is 
null 
) 
{ 
_unitOfWork 
. 
BeginTransaction ,
(, -
)- .
;. /
var   

newCompany   
=    
new  ! $
Company  % ,
{!! 
Email"" 
="" 
model"" !
.""! "
Email""" '
,""' (
PhoneNumber## 
=##  !
model##" '
.##' (
PhoneNumber##( 3
,##3 4
CompanyName$$ 
=$$  !
model$$" '
.$$' (
CompanyName$$( 3
,$$3 4
Address%% 
=%% 
model%% #
.%%# $
Address%%$ +
,%%+ ,
	TaxNumber&& 
=&& 
model&&  %
.&&% &
	TaxNumber&&& /
,&&/ 0
Country'' 
='' 

Constaints'' (
.''( )
COUNTRY_DEFAULT'') 8
,''8 9
Description(( 
=((  !

Constaints((" ,
.((, -
STRING_BLANK((- 9
,((9 :
CompanyType)) 
=))  !
ECompanyType))" .
.)). /
Product))/ 6
,))6 7
TeamSize** 
=** 
	ETeamSize** (
.**( )
ZeroTo50**) 1
,**1 2
Status++ 
=++ 
EStatusRecruiter++ -
.++- .
Pending++. 5
,++5 6
UpdatedDate,, 
=,,  !
DateTimeOffset,," 0
.,,0 1
Now,,1 4
,,,4 5
CreatedDate-- 
=--  !
DateTimeOffset--" 0
.--0 1
Now--1 4
,--4 5
	AvatarUrl.. 
=.. 

Constaints..  *
...* +
STRING_BLANK..+ 7
,..7 8
Featured// 
=// 
false// $
,//$ %
}00 
;00 
await11 
_unitOfWork11 !
.11! "

Repository11" ,
<11, -
Company11- 4
>114 5
(115 6
)116 7
.117 8
AddAsync118 @
(11@ A

newCompany11A K
)11K L
;11L M
var22 
resultAddCompany22 $
=22% &
await22' ,
_unitOfWork22- 8
.228 9
SaveChangeAsync229 H
(22H I
)22I J
;22J K
var44 !
firstAccountOfCompany44 )
=44* +
new44, /
User440 4
{55 
FullName66 
=66 
model66 $
.66$ %
FullName66% -
,66- .
Username77 
=77 
model77 $
.77$ %
Username77% -
,77- .
Password88 
=88 
model88 $
.88$ %
Password88% -
,88- .
CoverLetter99 
=99  !

Constaints99" ,
.99, -
STRING_BLANK99- 9
,999 :
UpdatedDate:: 
=::  !
DateTimeOffset::" 0
.::0 1
Now::1 4
,::4 5
CreatedDate;; 
=;;  !
DateTimeOffset;;" 0
.;;0 1
Now;;1 4
,;;4 5
ImageUrl<< 
=<< 

Constaints<< )
.<<) *
STRING_BLANK<<* 6
,<<6 7
PhoneNumber== 
===  !
model==" '
.==' (
PhoneNumber==( 3
,==3 4
RoleId>> 
=>> 
(>> 
long>> "
)>>" #
ERole>># (
.>>( )
ID_Business>>) 4
,>>4 5
IsActive?? 
=?? 
false?? $
,??$ %
Email@@ 
=@@ 
model@@ !
.@@! "
Email@@" '
,@@' (
TokenResetPasswordAA &
=AA' (
MyRandomAA) 1
.AA1 2
RandomStringAA2 >
(AA> ?
$numAA? A
)AAA B
}BB 
;BB 
ifDD 
(DD 
awaitDD 
_userServiceDD &
.DD& '
GetUserDD' .
(DD. /
newDD/ 2
UserDD3 7
{DD8 9
UsernameDD: B
=DDC D
modelDDE J
.DDJ K
UsernameDDK S
,DDS T
EmailDDU Z
=DD[ \
modelDD] b
.DDb c
EmailDDc h
}DDi j
)DDj k
isDDl n
notDDo r
nullDDs w
)DDw x
{EE 
_unitOfWorkFF 
.FF  
RollBackFF  (
(FF( )
)FF) *
;FF* +
throwGG 
newGG 
EWExceptionGG )
(GG) *
$strGG* `
)GG` a
;GGa b
}HH 
varII !
resultAddFirstAccountII )
=II* +
awaitII, 1
_userServiceII2 >
.II> ?
RegisterII? G
(IIG H!
firstAccountOfCompanyIIH ]
)II] ^
;II^ _
ifJJ 
(JJ 
!JJ 
resultAddCompanyJJ %
||JJ& (
!JJ) *!
resultAddFirstAccountJJ* ?
)JJ? @
{KK 
_unitOfWorkLL 
.LL  
RollBackLL  (
(LL( )
)LL) *
;LL* +
throwMM 
newMM 
EWExceptionMM )
(MM) *
$strMM* U
)MMU V
;MMV W
}NN 
varPP 
companyAddedPP  
=PP! "
awaitPP# (
_unitOfWorkPP) 4
.PP4 5

RepositoryPP5 ?
<PP? @
CompanyPP@ G
>PPG H
(PPH I
)PPI J
.PPJ K
FirstOrDefaultAsyncPPK ^
(PP^ _
companyPP_ f
=>PPg i
companyPPj q
.PPq r
EmailPPr w
==PPx z

newCompany	PP{ Ö
.
PPÖ Ü
Email
PPÜ ã
&&
PPå é
company
PPè ñ
.
PPñ ó
PhoneNumber
PPó ¢
==
PP£ •

newCompany
PP¶ ∞
.
PP∞ ±
PhoneNumber
PP± º
)
PPº Ω
;
PPΩ æ
varQQ 
accountAddedQQ  
=QQ! "
awaitQQ# (
_unitOfWorkQQ) 4
.QQ4 5

RepositoryQQ5 ?
<QQ? @
UserQQ@ D
>QQD E
(QQE F
)QQF G
.QQG H
FirstOrDefaultAsyncQQH [
(QQ[ \
userQQ\ `
=>QQa c
userQQd h
.QQh i
EmailQQi n
==QQo q"
firstAccountOfCompany	QQr á
.
QQá à
Email
QQà ç
&&
QQé ê
user
QQë ï
.
QQï ñ
Username
QQñ û
==
QQü °#
firstAccountOfCompany
QQ¢ ∑
.
QQ∑ ∏
Username
QQ∏ ¿
)
QQ¿ ¡
;
QQ¡ ¬
varRR 
newRecruiterRR  
=RR! "
newRR# &
	RecruiterRR' 0
{SS 
UserIdTT 
=TT 
accountAddedTT )
.TT) *
IdTT* ,
,TT, -
	CompanyIdUU 
=UU 
companyAddedUU  ,
.UU, -
IdUU- /
,UU/ 0
UserVV 
=VV 
accountAddedVV '
,VV' (
CompanyWW 
=WW 
companyAddedWW *
,WW* +
PositionXX 
=XX 
modelXX $
.XX$ %
PositionXX% -
,XX- .
UpdatedDateYY 
=YY  !
DateTimeOffsetYY" 0
.YY0 1
NowYY1 4
,YY4 5
CreatedDateZZ 
=ZZ  !
DateTimeOffsetZZ" 0
.ZZ0 1
NowZZ1 4
,ZZ4 5
}[[ 
;[[ 
await\\ 
_unitOfWork\\ !
.\\! "

Repository\\" ,
<\\, -
	Recruiter\\- 6
>\\6 7
(\\7 8
)\\8 9
.\\9 :
AddAsync\\: B
(\\B C
newRecruiter\\C O
)\\O P
;\\P Q
if]] 
(]] 
await]] 
_unitOfWork]] %
.]]% &
SaveChangeAsync]]& 5
(]]5 6
)]]6 7
)]]7 8
{^^ 
_unitOfWork__ 
.__  
Commit__  &
(__& '
)__' (
;__( )
return`` 
true`` 
;``  
}aa 
elsebb 
{cc 
_unitOfWorkdd 
.dd  
RollBackdd  (
(dd( )
)dd) *
;dd* +
throwee 
newee 
EWExceptionee )
(ee) *
$stree* L
)eeL M
;eeM N
}ff 
}gg 
throwhh 
newhh 
EWExceptionhh !
(hh! "
$strhh" X
)hhX Y
;hhY Z
}ii 	
publickk 
asynckk 
Taskkk 
<kk 
IEnumerablekk %
<kk% &
RecruiterViewModelkk& 8
>kk8 9
>kk9 :
GetRecruiterskk; H
(kkH I
)kkI J
{ll 	
varmm 
datamm 
=mm 
awaitmm 
_unitOfWorkmm (
.mm( )

Repositorymm) 3
<mm3 4
	Recruitermm4 =
>mm= >
(mm> ?
)mm? @
.mm@ A
GetAllAsyncmmA L
(mmL M
$strmmM [
)mm[ \
;mm\ ]
returnnn 
datann 
.nn 
Selectnn 
(nn 
itemnn #
=>nn$ &
newnn' *
RecruiterViewModelnn+ =
{oo 
Idpp 
=pp 
itempp 
.pp 
UserIdpp  
,pp  !
Usernameqq 
=qq 
itemqq 
.qq  
Userqq  $
.qq$ %
Usernameqq% -
,qq- .
FullNamerr 
=rr 
itemrr 
.rr  
Userrr  $
.rr$ %
FullNamerr% -
,rr- .
PhoneNumberss 
=ss 
itemss "
.ss" #
Userss# '
.ss' (
PhoneNumberss( 3
,ss3 4
Companytt 
=tt 
itemtt 
.tt 
Companytt &
,tt& '
Positionuu 
=uu 
itemuu 
.uu  
Positionuu  (
,uu( )
Emailvv 
=vv 
itemvv 
.vv 
Uservv !
.vv! "
Emailvv" '
,vv' (
CreatedDateww 
=ww 
itemww "
.ww" #
CreatedDateww# .
,ww. /
UpdatedDatexx 
=xx 
itemxx "
.xx" #
UpdatedDatexx# .
,xx. /
IsActiveyy 
=yy 
itemyy 
.yy  
Useryy  $
.yy$ %
IsActiveyy% -
}{{ 
){{ 
.{{ 
OrderByDescending{{  
({{  !
r{{! "
=>{{# %
r{{& '
.{{' (
CreatedDate{{( 3
){{3 4
.{{4 5
ToList{{5 ;
({{; <
){{< =
;{{= >
}|| 	
public~~ 
async~~ 
Task~~ 
<~~ 
bool~~ 
>~~ 
AssignUserToCompany~~  3
(~~3 4'
AddNewRecruiterAccountModel~~4 O
model~~P U
)~~U V
{ 	
var
ÄÄ 
exist
ÄÄ 
=
ÄÄ 
await
ÄÄ 
_unitOfWork
ÄÄ )
.
ÄÄ) *

Repository
ÄÄ* 4
<
ÄÄ4 5
User
ÄÄ5 9
>
ÄÄ9 :
(
ÄÄ: ;
)
ÄÄ; <
.
ÄÄ< =!
FirstOrDefaultAsync
ÄÄ= P
(
ÄÄP Q
item
ÄÄQ U
=>
ÄÄV X
item
ÄÄY ]
.
ÄÄ] ^
Username
ÄÄ^ f
==
ÄÄg i
model
ÄÄj o
.
ÄÄo p
Username
ÄÄp x
||
ÄÄy {
itemÄÄ| Ä
.ÄÄÄ Å
EmailÄÄÅ Ü
==ÄÄá â
modelÄÄä è
.ÄÄè ê
EmailÄÄê ï
||ÄÄñ ò
itemÄÄô ù
.ÄÄù û
PhoneNumberÄÄû ©
==ÄÄ™ ¨
modelÄÄ≠ ≤
.ÄÄ≤ ≥
PhoneNumberÄÄ≥ æ
)ÄÄæ ø
;ÄÄø ¿
if
ÅÅ 
(
ÅÅ 
exist
ÅÅ 
is
ÅÅ 
not
ÅÅ 
null
ÅÅ !
)
ÅÅ! "
throw
ÇÇ 
new
ÇÇ 
EWException
ÇÇ %
(
ÇÇ% &
$str
ÇÇ& R
)
ÇÇR S
;
ÇÇS T
_unitOfWork
ÉÉ 
.
ÉÉ 
BeginTransaction
ÉÉ (
(
ÉÉ( )
)
ÉÉ) *
;
ÉÉ* +
var
ÑÑ 
newRecruiter
ÑÑ 
=
ÑÑ 
new
ÑÑ "
User
ÑÑ# '
{
ÖÖ 
FullName
ÜÜ 
=
ÜÜ 
model
ÜÜ  
.
ÜÜ  !
FullName
ÜÜ! )
,
ÜÜ) *
Username
áá 
=
áá 
model
áá  
.
áá  !
Username
áá! )
,
áá) *
Password
àà 
=
àà 
model
àà  
.
àà  !
Password
àà! )
,
àà) *
CoverLetter
ââ 
=
ââ 
$str
ââ  
,
ââ  !
UpdatedDate
ää 
=
ää 
DateTimeOffset
ää ,
.
ää, -
Now
ää- 0
,
ää0 1
CreatedDate
ãã 
=
ãã 
DateTimeOffset
ãã ,
.
ãã, -
Now
ãã- 0
,
ãã0 1
ImageUrl
åå 
=
åå 
$str
åå 
,
åå 
PhoneNumber
çç 
=
çç 
model
çç #
.
çç# $
PhoneNumber
çç$ /
,
çç/ 0
RoleId
éé 
=
éé 
(
éé 
long
éé 
)
éé 
ERole
éé $
.
éé$ %
ID_Business
éé% 0
,
éé0 1
IsActive
èè 
=
èè 
false
èè  
,
èè  !
Email
êê 
=
êê 
model
êê 
.
êê 
Email
êê #
,
êê# $ 
TokenResetPassword
ëë "
=
ëë# $
MyRandom
ëë% -
.
ëë- .
RandomString
ëë. :
(
ëë: ;
$num
ëë; =
)
ëë= >
}
íí 
;
íí 
var
ìì 
resultAdded
ìì 
=
ìì 
await
ìì #
_userService
ìì$ 0
.
ìì0 1
Register
ìì1 9
(
ìì9 :
newRecruiter
ìì: F
)
ììF G
;
ììG H
if
îî 
(
îî 
!
îî 
resultAdded
îî 
)
îî 
{
ïï 
_unitOfWork
ññ 
.
ññ 
RollBack
ññ $
(
ññ$ %
)
ññ% &
;
ññ& '
throw
óó 
new
óó 
EWException
óó %
(
óó% &
$str
óó& G
)
óóG H
;
óóH I
}
òò 
var
ôô 
	userAdded
ôô 
=
ôô 
await
ôô !
_unitOfWork
ôô" -
.
ôô- .

Repository
ôô. 8
<
ôô8 9
User
ôô9 =
>
ôô= >
(
ôô> ?
)
ôô? @
.
ôô@ A!
FirstOrDefaultAsync
ôôA T
(
ôôT U
item
ôôU Y
=>
ôôZ \
item
ôô] a
.
ôôa b
Username
ôôb j
==
ôôk m
model
ôôn s
.
ôôs t
Username
ôôt |
&&
ôô} 
itemôôÄ Ñ
.ôôÑ Ö
EmailôôÖ ä
==ôôã ç
modelôôé ì
.ôôì î
Emailôôî ô
&&ôôö ú
itemôôù °
.ôô° ¢
PhoneNumberôô¢ ≠
==ôôÆ ∞
modelôô± ∂
.ôô∂ ∑
PhoneNumberôô∑ ¬
)ôô¬ √
;ôô√ ƒ
var
öö 
companyCurrent
öö 
=
öö  
await
öö! &
_unitOfWork
öö' 2
.
öö2 3

Repository
öö3 =
<
öö= >
Company
öö> E
>
ööE F
(
ööF G
)
ööG H
.
ööH I!
FirstOrDefaultAsync
ööI \
(
öö\ ]
item
öö] a
=>
ööb d
item
ööe i
.
ööi j
Id
ööj l
==
ööm o
model
ööp u
.
ööu v
	CompanyId
ööv 
)öö Ä
;ööÄ Å
if
õõ 
(
õõ 
	userAdded
õõ 
is
õõ 
null
õõ !
||
õõ" $
companyCurrent
õõ% 3
is
õõ4 6
null
õõ7 ;
)
õõ; <
{
úú 
_unitOfWork
ùù 
.
ùù 
RollBack
ùù $
(
ùù$ %
)
ùù% &
;
ùù& '
throw
ûû 
new
ûû 
EWException
ûû %
(
ûû% &
$str
ûû& G
)
ûûG H
;
ûûH I
}
üü 
var
†† 
newAsign
†† 
=
†† 
new
†† 
	Recruiter
†† (
{
°° 
UserId
¢¢ 
=
¢¢ 
	userAdded
¢¢ "
.
¢¢" #
Id
¢¢# %
,
¢¢% &
	CompanyId
££ 
=
££ 
companyCurrent
££ *
.
££* +
Id
££+ -
,
££- .
Position
§§ 
=
§§ 
model
§§  
.
§§  !
Position
§§! )
,
§§) *
UpdatedDate
•• 
=
•• 
DateTimeOffset
•• ,
.
••, -
Now
••- 0
,
••0 1
CreatedDate
¶¶ 
=
¶¶ 
DateTimeOffset
¶¶ ,
.
¶¶, -
Now
¶¶- 0
,
¶¶0 1
}
ßß 
;
ßß 
await
®® 
_unitOfWork
®® 
.
®® 

Repository
®® (
<
®®( )
	Recruiter
®®) 2
>
®®2 3
(
®®3 4
)
®®4 5
.
®®5 6
AddAsync
®®6 >
(
®®> ?
newAsign
®®? G
)
®®G H
;
®®H I
var
©© 
resultAssign
©© 
=
©© 
await
©© $
_unitOfWork
©©% 0
.
©©0 1
SaveChangeAsync
©©1 @
(
©©@ A
)
©©A B
;
©©B C
if
´´ 
(
´´ 
!
´´ 
resultAdded
´´ 
)
´´ 
{
¨¨ 
_unitOfWork
≠≠ 
.
≠≠ 
RollBack
≠≠ $
(
≠≠$ %
)
≠≠% &
;
≠≠& '
throw
ÆÆ 
new
ÆÆ 
EWException
ÆÆ %
(
ÆÆ% &
$str
ÆÆ& G
)
ÆÆG H
;
ÆÆH I
}
ØØ 
_unitOfWork
∞∞ 
.
∞∞ 
Commit
∞∞ 
(
∞∞ 
)
∞∞  
;
∞∞  !
return
±± 
true
±± 
;
±± 
}
≤≤ 	
public
¥¥ 
async
¥¥ 
Task
¥¥ 
<
¥¥  
RecruiterViewModel
¥¥ ,
>
¥¥, - 
GetRecruiterByUser
¥¥. @
(
¥¥@ A
User
¥¥A E
model
¥¥F K
)
¥¥K L
{
µµ 	
var
∂∂ 
data
∂∂ 
=
∂∂ 
await
∂∂ 
_unitOfWork
∂∂ (
.
∂∂( )

Repository
∂∂) 3
<
∂∂3 4
	Recruiter
∂∂4 =
>
∂∂= >
(
∂∂> ?
)
∂∂? @
.
∂∂@ A!
FirstOrDefaultAsync
∂∂A T
(
∂∂T U
item
∂∂U Y
=>
∂∂Z \
item
∂∂] a
.
∂∂a b
User
∂∂b f
.
∂∂f g
Username
∂∂g o
==
∂∂p r
model
∂∂s x
.
∂∂x y
Username∂∂y Å
&&∂∂Ç Ñ
item∂∂Ö â
.∂∂â ä
User∂∂ä é
.∂∂é è
Email∂∂è î
==∂∂ï ó
model∂∂ò ù
.∂∂ù û
Email∂∂û £
,∂∂£ §
$str∂∂• ≥
)∂∂≥ ¥
;∂∂¥ µ
return
∑∑ 
new
∑∑  
RecruiterViewModel
∑∑ )
{
∏∏ 
Id
ππ 
=
ππ 
data
ππ 
.
ππ 
UserId
ππ  
,
ππ  !
Username
∫∫ 
=
∫∫ 
data
∫∫ 
.
∫∫  
User
∫∫  $
.
∫∫$ %
Username
∫∫% -
,
∫∫- .
FullName
ªª 
=
ªª 
data
ªª 
.
ªª  
User
ªª  $
.
ªª$ %
FullName
ªª% -
,
ªª- .
PhoneNumber
ºº 
=
ºº 
data
ºº "
.
ºº" #
User
ºº# '
.
ºº' (
PhoneNumber
ºº( 3
,
ºº3 4
Company
ΩΩ 
=
ΩΩ 
data
ΩΩ 
.
ΩΩ 
Company
ΩΩ &
,
ΩΩ& '
Position
ææ 
=
ææ 
data
ææ 
.
ææ  
Position
ææ  (
,
ææ( )
Email
øø 
=
øø 
data
øø 
.
øø 
User
øø !
.
øø! "
Email
øø" '
,
øø' (
CreatedDate
¿¿ 
=
¿¿ 
data
¿¿ "
.
¿¿" #
CreatedDate
¿¿# .
,
¿¿. /
UpdatedDate
¡¡ 
=
¡¡ 
data
¡¡ "
.
¡¡" #
UpdatedDate
¡¡# .
,
¡¡. /
IsActive
¬¬ 
=
¬¬ 
data
¬¬ 
.
¬¬  
User
¬¬  $
.
¬¬$ %
IsActive
¬¬% -
}
√√ 
;
√√ 
}
ƒƒ 	
public
∆∆ 
async
∆∆ 
Task
∆∆ 
<
∆∆ 
IEnumerable
∆∆ %
<
∆∆% & 
RecruiterViewModel
∆∆& 8
>
∆∆8 9
>
∆∆9 :$
GetRecruitersByCompany
∆∆; Q
(
∆∆Q R
Company
∆∆R Y
company
∆∆Z a
)
∆∆a b
{
«« 	
var
»» 
data
»» 
=
»» 
await
»» 
_unitOfWork
»» (
.
»»( )

Repository
»») 3
<
»»3 4
	Recruiter
»»4 =
>
»»= >
(
»»> ?
)
»»? @
.
»»@ A
GetAsync
»»A I
(
»»I J
item
»»J N
=>
»»O Q
item
»»R V
.
»»V W
	CompanyId
»»W `
==
»»a c
company
»»d k
.
»»k l
Id
»»l n
,
»»n o
$str
»»p ~
)
»»~ 
;»» Ä
return
…… 
data
…… 
.
…… 
Select
…… 
(
…… 
item
…… #
=>
……$ &
new
……' * 
RecruiterViewModel
……+ =
{
   
Id
ÀÀ 
=
ÀÀ 
item
ÀÀ 
.
ÀÀ 
UserId
ÀÀ  
,
ÀÀ  !
Username
ÃÃ 
=
ÃÃ 
item
ÃÃ 
.
ÃÃ  
User
ÃÃ  $
.
ÃÃ$ %
Username
ÃÃ% -
,
ÃÃ- .
FullName
ÕÕ 
=
ÕÕ 
item
ÕÕ 
.
ÕÕ  
User
ÕÕ  $
.
ÕÕ$ %
FullName
ÕÕ% -
,
ÕÕ- .
PhoneNumber
ŒŒ 
=
ŒŒ 
item
ŒŒ "
.
ŒŒ" #
User
ŒŒ# '
.
ŒŒ' (
PhoneNumber
ŒŒ( 3
,
ŒŒ3 4
Company
œœ 
=
œœ 
item
œœ 
.
œœ 
Company
œœ &
,
œœ& '
Position
–– 
=
–– 
item
–– 
.
––  
Position
––  (
,
––( )
Email
—— 
=
—— 
item
—— 
.
—— 
User
—— !
.
——! "
Email
——" '
,
——' (
CreatedDate
““ 
=
““ 
item
““ "
.
““" #
CreatedDate
““# .
,
““. /
UpdatedDate
”” 
=
”” 
item
”” "
.
””" #
UpdatedDate
””# .
,
””. /
IsActive
‘‘ 
=
‘‘ 
item
‘‘ 
.
‘‘  
User
‘‘  $
.
‘‘$ %
IsActive
‘‘% -
}
÷÷ 
)
÷÷ 
.
÷÷ 
OrderByDescending
÷÷  
(
÷÷  !
r
÷÷! "
=>
÷÷# %
r
÷÷& '
.
÷÷' (
CreatedDate
÷÷( 3
)
÷÷3 4
.
÷÷4 5
ToList
÷÷5 ;
(
÷÷; <
)
÷÷< =
;
÷÷= >
}
◊◊ 	
}
ÿÿ 
}ŸŸ ˘T
BD:\Dacntt2\Source\EW\EW.Service\Business\RecruitmentPostService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public		 

class		 "
RecruitmentPostService		 '
:		( )#
IRecruitmentPostService		* A
{

 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public "
RecruitmentPostService %
(% &
IUnitOfWork& 1

unitOfWork2 <
)< =
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
RecruitmentPost )
>) *
Add+ .
(. /
RecruitmentPost/ >
model? D
)D E
{ 	
model 
. 
UpdatedDate 
= 
DateTime  (
.( )
Now) ,
;, -
model 
. 
CreatedDate 
= 
DateTime  (
.( )
Now) ,
;, -
await 
_unitOfWork 
. 

Repository (
<( )
RecruitmentPost) 8
>8 9
(9 :
): ;
.; <
AddAsync< D
(D E
modelE J
)J K
;K L
if 
( 
! 
await 
_unitOfWork "
." #
SaveChangeAsync# 2
(2 3
)3 4
)4 5
throw 
new 
EWException %
(% &
$str& >
)> ?
;? @
return 
model 
; 
} 	
public 
async 
Task 
< 
bool 
> 
Delete  &
(& '
RecruitmentPost' 6
model7 <
)< =
{ 	
var 
exist 
= 
await 
_unitOfWork )
.) *

Repository* 4
<4 5
RecruitmentPost5 D
>D E
(E F
)F G
.G H
FirstOrDefaultAsyncH [
([ \
item\ `
=>a c
itemd h
.h i
Idi k
==l n
modelo t
.t u
Idu w
)w x
;x y
_unitOfWork 
. 

Repository "
<" #
RecruitmentPost# 2
>2 3
(3 4
)4 5
.5 6
Delete6 <
(< =
exist= B
)B C
;C D
return 
await 
_unitOfWork $
.$ %
SaveChangeAsync% 4
(4 5
)5 6
;6 7
}   	
public"" 
async"" 
Task"" 
<"" 
IEnumerable"" %
<""% &
RecruitmentPost""& 5
>""5 6
>""6 7
GetAll""8 >
(""> ?
)""? @
{## 	
return$$ 
await$$ 
_unitOfWork$$ $
.$$$ %

Repository$$% /
<$$/ 0
RecruitmentPost$$0 ?
>$$? @
($$@ A
)$$A B
.$$B C
GetAllAsync$$C N
($$N O
$str$$O f
)$$f g
;$$g h
}%% 	
public'' 
async'' 
Task'' 
<'' 
RecruitmentPost'' )
>'') *
GetRecruitmentPost''+ =
(''= >
RecruitmentPost''> M
model''N S
)''S T
{(( 	
return)) 
await)) 
_unitOfWork)) $
.))$ %

Repository))% /
<))/ 0
RecruitmentPost))0 ?
>))? @
())@ A
)))A B
.))B C
FirstOrDefaultAsync))C V
())V W
item))W [
=>))\ ^
item))_ c
.))c d
Id))d f
==))g i
model))j o
.))o p
Id))p r
||** 
item** #
.**# $
JobTitle**$ ,
==**- /
model**0 5
.**5 6
JobTitle**6 >
||++ 
item++ #
.++# $
JobDescription++$ 2
==++3 5
model++6 ;
.++; <
JobDescription++< J
||,, 
item,, #
.,,# $
CreatedDate,,$ /
==,,0 2
model,,3 8
.,,8 9
CreatedDate,,9 D
||-- 
item-- #
.--# $
	UpdatedBy--$ -
==--. 0
model--1 6
.--6 7
	UpdatedBy--7 @
,--@ A
$str--B Y
)--Y Z
;--Z [
}.. 	
public00 
async00 
Task00 
<00 
RecruitmentPost00 )
>00) *'
GetRecruitmentPostForDetail00+ F
(00F G
RecruitmentPost00G V
model00W \
)00\ ]
{11 	
return22 
await22 
_unitOfWork22 $
.22$ %

Repository22% /
<22/ 0
RecruitmentPost220 ?
>22? @
(22@ A
)22A B
.22B C
FirstOrDefaultAsync22C V
(22V W
item22W [
=>22\ ^
item22_ c
.22c d
Id22d f
==22g i
model22j o
.22o p
Id22p r
,22r s
$str22t }
)22} ~
;22~ 
}33 	
public55 
async55 
Task55 
<55 
IEnumerable55 %
<55% &
RecruitmentPost55& 5
>555 6
>556 7(
GetRecruitmentPostsByCompany558 T
(55T U
Company55U \
company55] d
)55d e
{66 	
return77 
await77 
_unitOfWork77 $
.77$ %

Repository77% /
<77/ 0
RecruitmentPost770 ?
>77? @
(77@ A
)77A B
.77B C
GetAsync77C K
(77K L
item77L P
=>77Q S
item77T X
.77X Y
	CompanyId77Y b
==77c e
company77f m
.77m n
Id77n p
)77p q
;77q r
}88 	
public:: 
async:: 
Task:: 
<:: 
IEnumerable:: %
<::% &
RecruitmentPost::& 5
>::5 6
>::6 7%
GetRecruitmentPostsByUser::8 Q
(::Q R
User::R V
user::W [
)::[ \
{;; 	
var<< 
recruitmentPosts<<  
=<<! "
await<<# (
_unitOfWork<<) 4
.<<4 5

Repository<<5 ?
<<<? @
RecruitmentPost<<@ O
><<O P
(<<P Q
)<<Q R
.<<R S
GetAllAsync<<S ^
(<<^ _
$str<<_ v
)<<v w
;<<w x
if?? 
(?? 
user?? 
.?? 
RoleId?? 
==?? 
(??  
long??  $
)??$ %
ERole??% *
.??* +
ID_Business??+ 6
)??6 7
{@@ 
varAA 
	recruiterAA 
=AA 
awaitAA  %
_unitOfWorkAA& 1
.AA1 2

RepositoryAA2 <
<AA< =
	RecruiterAA= F
>AAF G
(AAG H
)AAH I
.AAI J
FirstOrDefaultAsyncAAJ ]
(AA] ^
itemAA^ b
=>AAc e
itemAAf j
.AAj k
UserIdAAk q
==AAr t
userAAu y
.AAy z
IdAAz |
,AA| }
$str	AA~ á
)
AAá à
;
AAà â
ifCC 
(CC 
	recruiterCC 
isCC  
nullCC! %
)CC% &
{DD 
returnEE 
newEE 
ListEE #
<EE# $
RecruitmentPostEE$ 3
>EE3 4
(EE4 5
)EE5 6
;EE6 7
}FF 
recruitmentPostsGG  
=GG! "
recruitmentPostsGG# 3
.GG3 4
WhereGG4 9
(GG9 :
itemGG: >
=>GG? A
itemGGB F
.GGF G
	CompanyIdGGG P
==GGQ S
	recruiterGGT ]
.GG] ^
	CompanyIdGG^ g
)GGg h
.GGh i
ToListGGi o
(GGo p
)GGp q
;GGq r
}HH 
returnJJ 
recruitmentPostsJJ #
.JJ# $
OrderByDescendingJJ$ 5
(JJ5 6
itemJJ6 :
=>JJ; =
itemJJ> B
.JJB C
CreatedDateJJC N
)JJN O
;JJO P
}KK 	
publicMM 
asyncMM 
TaskMM 
<MM 
RecruitmentPostMM )
>MM) *"
GetRecruitmentSpecificMM+ A
(MMA B
RecruitmentPostMMB Q
modelMMR W
)MMW X
{NN 	
returnOO 
awaitOO 
_unitOfWorkOO $
.OO$ %

RepositoryOO% /
<OO/ 0
RecruitmentPostOO0 ?
>OO? @
(OO@ A
)OOA B
.OOB C
FirstOrDefaultAsyncOOC V
(OOV W
itemOOW [
=>OO\ ^
itemOO_ c
.OOc d
IdOOd f
==OOg i
modelOOj o
.OOo p
IdOOp r
&&PP 
itemPP  $
.PP$ %
JobTitlePP% -
==PP. 0
modelPP1 6
.PP6 7
JobTitlePP7 ?
&&QQ 
itemQQ  $
.QQ$ %
JobDescriptionQQ% 3
==QQ4 6
modelQQ7 <
.QQ< =
JobDescriptionQQ= K
&&RR 
itemRR  $
.RR$ %
CreatedDateRR% 0
==RR1 3
modelRR4 9
.RR9 :
CreatedDateRR: E
&&SS 
itemSS  $
.SS$ %
UpdatedDateSS% 0
==SS1 3
modelSS4 9
.SS9 :
UpdatedDateSS: E
&&TT 
itemTT  $
.TT$ %
	UpdatedByTT% .
==TT/ 1
modelTT2 7
.TT7 8
	UpdatedByTT8 A
,TTA B
$strTTC Z
)TTZ [
;TT[ \
}UU 	
publicWW 
asyncWW 
TaskWW 
<WW 
boolWW 
>WW 
UpdateWW  &
(WW& '
RecruitmentPostWW' 6
modelWW7 <
)WW< =
{XX 	
modelYY 
.YY 
UpdatedDateYY 
=YY 
DateTimeYY  (
.YY( )
NowYY) ,
;YY, -
_unitOfWorkZZ 
.ZZ 

RepositoryZZ "
<ZZ" #
RecruitmentPostZZ# 2
>ZZ2 3
(ZZ3 4
)ZZ4 5
.ZZ5 6
UpdateZZ6 <
(ZZ< =
modelZZ= B
)ZZB C
;ZZC D
return[[ 
await[[ 
_unitOfWork[[ $
.[[$ %
SaveChangeAsync[[% 4
([[4 5
)[[5 6
;[[6 7
}\\ 	
}]] 
}^^ ÷5
8D:\Dacntt2\Source\EW\EW.Service\Business\TokenService.cs
	namespace		 	
EW		
 
.		 
Services		 
.		 
Business		 
{

 
public 

class 
TokenService 
: 
ITokenService  -
{ 
private 
readonly  
SymmetricSecurityKey -
_keyAccessToken. =
;= >
private 
readonly  
SymmetricSecurityKey -
_keyRefreshToken. >
;> ?
public 
TokenService 
( 
) 
{ 	
_keyAccessToken 
= 
new !
(! "
Encoding" *
.* +
UTF8+ /
./ 0
GetBytes0 8
(8 9

Constaints9 C
.C D
ACCES_TOKEN_KEYD S
)S T
)T U
;U V
_keyRefreshToken 
= 
new "
(" #
Encoding# +
.+ ,
UTF8, 0
.0 1
GetBytes1 9
(9 :

Constaints: D
.D E
REFRESH_TOKEN_KEYE V
)V W
)W X
;X Y
} 	
public 
string 
CreateRefreshToken (
(( )
User) -
user. 2
)2 3
{ 	
var 
signingCredentials "
=# $
new 
SigningCredentials &
(& '
_keyRefreshToken' 7
,7 8
SecurityAlgorithms9 K
.K L
HmacSha256SignatureL _
)_ `
;` a
var 
header 
= 
new 
	JwtHeader &
(& '
signingCredentials' 9
)9 :
;: ;
var 
payload 
= 
new 

JwtPayload (
(( )
user) -
.- .
Email. 3
,3 4
null5 9
,9 :
null; ?
,? @
nullA E
,E F
DateTimeG O
.O P
NowP S
.S T
	AddMonthsT ]
(] ^
$num^ _
)_ `
)` a
;a b
var 
securityToken 
= 
new  #
JwtSecurityToken$ 4
(4 5
header5 ;
,; <
payload= D
)D E
;E F
return 
new #
JwtSecurityTokenHandler .
(. /
)/ 0
.0 1

WriteToken1 ;
(; <
securityToken< I
)I J
;J K
} 	
public 
string 
CreateToken !
(! "
User" &
user' +
)+ ,
{   	
var!! 
claims!! 
=!! 
new!! 
List!! !
<!!! "
Claim!!" '
>!!' (
(!!( )
)!!) *
{"" 
new## 
Claim## 
(## #
JwtRegisteredClaimNames## 1
.##1 2
NameId##2 8
,##8 9
user##: >
.##> ?
Username##? G
)##G H
,##H I
new$$ 
Claim$$ 
($$ 

ClaimTypes$$ $
.$$$ %
Name$$% )
,$$) *
user$$+ /
.$$/ 0
Username$$0 8
)$$8 9
,$$9 :
new%% 
Claim%% 
(%% 

ClaimTypes%% $
.%%$ %
Role%%% )
,%%) *
user%%+ /
.%%/ 0
Role%%0 4
.%%4 5
Name%%5 9
)%%9 :
,%%: ;
new&& 
Claim&& 
(&& 

ClaimTypes&& $
.&&$ %
Email&&% *
,&&* +
user&&, 0
.&&0 1
Email&&1 6
)&&6 7
,&&7 8
new'' 
Claim'' 
('' 

ClaimTypes'' $
.''$ %
	GivenName''% .
,''. /
user''0 4
.''4 5
FullName''5 =
)''= >
,''> ?
new(( 
Claim(( 
((( 

ClaimTypes(( $
.(($ %

Thumbprint((% /
,((/ 0
user((1 5
.((5 6
ImageUrl((6 >
)((> ?
,((? @
})) 
;)) 
var** 
creds** 
=** 
new** 
SigningCredentials** .
(**. /
_keyAccessToken**/ >
,**> ?
SecurityAlgorithms**@ R
.**R S
HmacSha512Signature**S f
)**f g
;**g h
var++ 
tokenDescriptor++ 
=++  !
new++" %#
SecurityTokenDescriptor++& =
{,, 
Subject-- 
=-- 
new-- 
ClaimsIdentity-- ,
(--, -
claims--- 3
)--3 4
,--4 5
Expires.. 
=.. 
DateTime.. "
..." #
Now..# &
...& '
AddDays..' .
(... /
$num../ 0
)..0 1
,..1 2
SigningCredentials// "
=//# $
creds//% *
}00 
;00 
var11 
tokenHandler11 
=11 
new11 "#
JwtSecurityTokenHandler11# :
(11: ;
)11; <
;11< =
var22 
token22 
=22 
tokenHandler22 $
.22$ %
CreateToken22% 0
(220 1
tokenDescriptor221 @
)22@ A
;22A B
return33 
tokenHandler33 
.33  

WriteToken33  *
(33* +
token33+ 0
)330 1
;331 2
}44 	
public66 
JwtSecurityToken66 
?66  "
GetPayloadRefreshToken66! 7
(667 8
string668 >
refreshToken66? K
)66K L
{77 	
var88 
handler88 
=88 
new88 #
JwtSecurityTokenHandler88 5
(885 6
)886 7
;887 8
handler:: 
.:: 
ValidateToken:: !
(::! "
refreshToken::" .
,::. /
new::0 3%
TokenValidationParameters::4 M
{;; $
ValidateIssuerSigningKey<< (
=<<) *
true<<+ /
,<</ 0
IssuerSigningKey==  
===! "
_keyRefreshToken==# 3
,==3 4
ValidateIssuer>> 
=>>  
false>>! &
,>>& '
ValidateAudience??  
=??! "
false??# (
}@@ 
,@@ 
out@@ 
SecurityToken@@  
validatedToken@@! /
)@@/ 0
;@@0 1
returnBB 
validatedTokenBB !
asBB" $
JwtSecurityTokenBB% 5
;BB5 6
}CC 	
}DD 
}EE ”-
9D:\Dacntt2\Source\EW\EW.Service\Business\UserCVService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
UserCVService 
:  
IUserCVService! /
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
UserCVService 
( 
IUnitOfWork (

unitOfWork) 3
)3 4
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
UserCV  
>  !
AddCV" '
(' (
UserCV( .
model/ 4
)4 5
{ 	
model 
. 
UpdatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
model 
. 
CreatedDate 
= 
DateTimeOffset  .
.. /
Now/ 2
;2 3
await 
_unitOfWork 
. 

Repository (
<( )
UserCV) /
>/ 0
(0 1
)1 2
.2 3
AddAsync3 ;
(; <
model< A
)A B
;B C
if 
( 
! 
await 
_unitOfWork "
." #
SaveChangeAsync# 2
(2 3
)3 4
)4 5
throw 
new 
EWException %
(% &
$str& 8
)8 9
;9 :
return 
model 
; 
} 	
public 
async 
Task 
< 
UserCV  
>  !
GetUserCVByInfo" 1
(1 2
UserCV2 8
model9 >
)> ?
{ 	
return 
await 
_unitOfWork $
.$ %

Repository% /
</ 0
UserCV0 6
>6 7
(7 8
)8 9
.9 :
FirstOrDefaultAsync: M
(M N
itemN R
=>S U
itemV Z
.Z [
Id[ ]
==^ `
modela f
.f g
Idg i
||j l
itemm q
.q r
CVUrlr w
==x z
model	{ Ä
.
Ä Å
CVUrl
Å Ü
,
Ü á
$str
à é
)
é è
;
è ê
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
UserCV& ,
>, -
>- .
GetUserCVsByUser/ ?
(? @
User@ D
modelE J
)J K
{   	
return!! 
await!! 
_unitOfWork!! $
.!!$ %

Repository!!% /
<!!/ 0
UserCV!!0 6
>!!6 7
(!!7 8
)!!8 9
.!!9 :
GetAsync!!: B
(!!B C
item!!C G
=>!!H J
item!!K O
.!!O P
UserId!!P V
==!!W Y
model!!Z _
.!!_ `
Id!!` b
)!!b c
;!!c d
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
bool$$ 
>$$ 
RemoveCV$$  (
($$( )
UserCV$$) /
model$$0 5
)$$5 6
{%% 	
_unitOfWork&& 
.&& 

Repository&& "
<&&" #
UserCV&&# )
>&&) *
(&&* +
)&&+ ,
.&&, -
Delete&&- 3
(&&3 4
model&&4 9
)&&9 :
;&&: ;
return'' 
await'' 
_unitOfWork'' $
.''$ %
SaveChangeAsync''% 4
(''4 5
)''5 6
;''6 7
}(( 	
public** 
async** 
Task** 
<** 
bool** 
>** 
UpdateFeaturedCV**  0
(**0 1
UserCV**1 7
model**8 =
)**= >
{++ 	
var,, 
cvs,, 
=,, 
await,, 
_unitOfWork,, '
.,,' (

Repository,,( 2
<,,2 3
UserCV,,3 9
>,,9 :
(,,: ;
),,; <
.,,< =
GetAsync,,= E
(,,E F
item,,F J
=>,,K M
item,,N R
.,,R S
UserId,,S Y
==,,Z \
model,,] b
.,,b c
UserId,,c i
),,i j
;,,j k
foreach-- 
(-- 
var-- 
cv-- 
in-- 
cvs-- "
)--" #
{.. 
if// 
(// 
cv// 
.// 
Id// 
==// 
model// "
.//" #
Id//# %
)//% &
{00 
cv11 
.11 
Featured11 
=11  !
model11" '
.11' (
Featured11( 0
;110 1
}22 
else33 
{44 
cv55 
.55 
Featured55 
=55  !
false55" '
;55' (
}66 
cv77 
.77 
UpdatedDate77 
=77  
DateTimeOffset77! /
.77/ 0
Now770 3
;773 4
_unitOfWork88 
.88 

Repository88 &
<88& '
UserCV88' -
>88- .
(88. /
)88/ 0
.880 1
Update881 7
(887 8
cv888 :
)88: ;
;88; <
}99 
return:: 
await:: 
_unitOfWork:: $
.::$ %
SaveChangeAsync::% 4
(::4 5
)::5 6
;::6 7
};; 	
}<< 
}== °
AD:\Dacntt2\Source\EW\EW.Service\Business\UserExperienceService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class !
UserExperienceService &
:' ("
IUserExperienceService) ?
{ 
private		 
readonly		 
IUnitOfWork		 $
_unitOfWork		% 0
;		0 1
public

 !
UserExperienceService

 $
(

$ %
IUnitOfWork

% 0

unitOfWork

1 ;
)

; <
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
UserExperience& 4
>4 5
>5 6$
GetUserExperiencesByUser7 O
(O P
UserP T
modelU Z
)Z [
{ 	
return 
await 
_unitOfWork $
.$ %

Repository% /
</ 0
UserExperience0 >
>> ?
(? @
)@ A
.A B
GetAsyncB J
(J K
itemK O
=>P R
itemS W
.W X
UserIdX ^
==_ a
modelb g
.g h
Idh j
)j k
;k l
} 	
} 
} ±r
7D:\Dacntt2\Source\EW\EW.Service\Business\UserService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{		 
public

 

class

 
UserService

 
:

 
IUserService

 +
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public 
UserService 
( 
IUnitOfWork &

unitOfWork' 1
)1 2
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
bool 
> 
AddUser  '
(' (
User( ,
user- 1
)1 2
{ 	
var 
exist 
= 
await 
_unitOfWork )
.) *

Repository* 4
<4 5
User5 9
>9 :
(: ;
); <
.< =
FirstOrDefaultAsync= P
(P Q
itemQ U
=>V X
itemY ]
.] ^
Email^ c
==d f
userg k
.k l
Emaill q
||r t
itemu y
.y z
PhoneNumber	z Ö
==
Ü à
user
â ç
.
ç é
PhoneNumber
é ô
)
ô ö
;
ö õ
if 
( 
exist 
is 
not 
null !
)! "
{ 
throw 
new 
EWException %
(% &
$str& @
)@ A
;A B
} 
await 
_unitOfWork 
. 

Repository (
<( )
User) -
>- .
(. /
)/ 0
.0 1
AddAsync1 9
(9 :
user: >
)> ?
;? @
return 
await 
_unitOfWork $
.$ %
SaveChangeAsync% 4
(4 5
)5 6
;6 7
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Role& *
>* +
>+ ,
GetRoles- 5
(5 6
)6 7
{ 	
return 
await 
_unitOfWork $
.$ %

Repository% /
</ 0
Role0 4
>4 5
(5 6
)6 7
.7 8
GetAllAsync8 C
(C D
)D E
;E F
}   	
public"" 
async"" 
Task"" 
<"" 
User"" 
>"" 
GetUser""  '
(""' (
User""( ,
user""- 1
)""1 2
{## 	
var$$ 
result$$ 
=$$ 
await$$ 
_unitOfWork$$ *
.$$* +

Repository$$+ 5
<$$5 6
User$$6 :
>$$: ;
($$; <
)$$< =
.$$= >
FirstOrDefaultAsync$$> Q
($$Q R
item$$R V
=>$$W Y
item$$Z ^
.$$^ _
Id$$_ a
==$$b d
user$$e i
.$$i j
Id$$j l
||$$m o
item$$p t
.$$t u
Email$$u z
==$${ }
user	$$~ Ç
.
$$Ç É
Email
$$É à
||
$$â ã
item
$$å ê
.
$$ê ë
Username
$$ë ô
==
$$ö ú
user
$$ù °
.
$$° ¢
Username
$$¢ ™
,
$$™ ´
includeProperties
$$¨ Ω
:
$$Ω æ
$str
$$ø ≈
)
$$≈ ∆
;
$$∆ «
return%% 
result%% 
;%% 
}&& 	
public(( 
async(( 
Task(( 
<(( 
IEnumerable(( %
<((% &
User((& *
>((* +
>((+ ,
GetUsers((- 5
(((5 6
)((6 7
{)) 	
return** 
await** 
_unitOfWork** $
.**$ %

Repository**% /
<**/ 0
User**0 4
>**4 5
(**5 6
)**6 7
.**7 8
GetAllAsync**8 C
(**C D
includeProperties**D U
:**U V
$str**W ]
)**] ^
;**^ _
}++ 	
public-- 
async-- 
Task-- 
<-- 
bool-- 
>-- 
Register--  (
(--( )
User--) -
user--. 2
)--2 3
{.. 	
var// 
exist// 
=// 
await// 
GetUser// %
(//% &
new//& )
User//* .
{/// 0
Username//1 9
=//: ;
user//< @
.//@ A
Username//A I
,//I J
Email//K P
=//Q R
user//S W
.//W X
Email//X ]
}//^ _
)//_ `
;//` a
if11 
(11 
exist11 
is11 
not11 
null11 !
)11! "
{22 
throw33 
new33 
EWException33 %
(33% &
$str33& ?
)33? @
;33@ A
}44 
var66 
hashed66 
=66 
BCrypt66 
.66  
Net66  #
.66# $
BCrypt66$ *
.66* +
HashPassword66+ 7
(667 8
user668 <
.66< =
Password66= E
,66E F
BCrypt66G M
.66M N
Net66N Q
.66Q R
BCrypt66R X
.66X Y
GenerateSalt66Y e
(66e f
$num66f h
)66h i
)66i j
;66j k
await77 
_unitOfWork77 
.77 

Repository77 (
<77( )
User77) -
>77- .
(77. /
)77/ 0
.770 1
AddAsync771 9
(779 :
new77: =
User77> B
{88 
Username99 
=99 
user99 
.99  
Username99  (
,99( )
Password:: 
=:: 
hashed:: !
,::! "
PhoneNumber;; 
=;; 
user;; "
.;;" #
PhoneNumber;;# .
,;;. /
Email<< 
=<< 
user<< 
.<< 
Email<< "
,<<" #
FullName== 
=== 
user== 
.==  
FullName==  (
,==( )
CreatedDate>> 
=>> 
DateTimeOffset>> ,
.>>, -
Now>>- 0
,>>0 1
UpdatedDate?? 
=?? 
DateTimeOffset?? ,
.??, -
Now??- 0
,??0 1
RoleId@@ 
=@@ 
user@@ 
.@@ 
RoleId@@ $
,@@$ %
IsActiveAA 
=AA 
trueAA 
,AA  
ImageUrlBB 
=BB 
$strBB 
,BB 
CoverLetterCC 
=CC 
$strCC  
,CC  !
TokenResetPasswordDD "
=DD# $
MyRandomDD% -
.DD- .
RandomStringDD. :
(DD: ;
$numDD; =
)DD= >
,DD> ?
}EE 
)EE 
;EE 
returnGG 
awaitGG 
_unitOfWorkGG $
.GG$ %
SaveChangeAsyncGG% 4
(GG4 5
)GG5 6
;GG6 7
}HH 	
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
boolJJ 
>JJ 
RegisterWithGoogleJJ  2
(JJ2 3
UserJJ3 7
userJJ8 <
)JJ< =
{KK 	
varLL 
isExistLL 
=LL 
awaitLL 
GetUserLL  '
(LL' (
userLL( ,
)LL, -
;LL- .
ifMM 
(MM 
isExistMM 
isMM 
notMM 
nullMM #
)MM# $
{NN 
returnOO 
trueOO 
;OO 
}PP 
varQQ 
hashedQQ 
=QQ 
BCryptQQ 
.QQ  
NetQQ  #
.QQ# $
BCryptQQ$ *
.QQ* +
HashPasswordQQ+ 7
(QQ7 8
DateTimeOffsetQQ8 F
.QQF G
NowQQG J
.QQJ K
ToStringQQK S
(QQS T
)QQT U
,QQU V
BCryptQQW ]
.QQ] ^
NetQQ^ a
.QQa b
BCryptQQb h
.QQh i
GenerateSaltQQi u
(QQu v
$numQQv x
)QQx y
)QQy z
;QQz {
awaitRR 
_unitOfWorkRR 
.RR 

RepositoryRR (
<RR( )
UserRR) -
>RR- .
(RR. /
)RR/ 0
.RR0 1
AddAsyncRR1 9
(RR9 :
newRR: =
UserRR> B
{SS 
UsernameTT 
=TT 
userTT 
.TT  
UsernameTT  (
,TT( )
PasswordUU 
=UU 
hashedUU !
,UU! "
PhoneNumberVV 
=VV 
userVV "
.VV" #
PhoneNumberVV# .
??VV/ 1
MyRandomVV2 :
.VV: ;
RandomStringVV; G
(VVG H
$numVVH J
)VVJ K
,VVK L
EmailWW 
=WW 
userWW 
.WW 
EmailWW "
,WW" #
FullNameXX 
=XX 
userXX 
.XX  
FullNameXX  (
,XX( )
CreatedDateYY 
=YY 
DateTimeOffsetYY ,
.YY, -
NowYY- 0
,YY0 1
UpdatedDateZZ 
=ZZ 
DateTimeOffsetZZ ,
.ZZ, -
NowZZ- 0
,ZZ0 1
RoleId[[ 
=[[ 
([[ 
long[[ 
)[[ 
ERole[[ $
.[[$ %

ID_Student[[% /
,[[/ 0
IsActive\\ 
=\\ 
true\\ 
,\\  
ImageUrl]] 
=]] 
user]] 
.]]  
ImageUrl]]  (
,]]( )
CoverLetter^^ 
=^^ 
$str^^  
,^^  !
TokenResetPassword__ "
=__# $
MyRandom__% -
.__- .
RandomString__. :
(__: ;
$num__; =
)__= >
,__> ?
}`` 
)`` 
;`` 
returnaa 
awaitaa 
_unitOfWorkaa $
.aa$ %
SaveChangeAsyncaa% 4
(aa4 5
)aa5 6
;aa6 7
}bb 	
publicdd 
asyncdd 
Taskdd 
<dd 
stringdd  
>dd  !
GenKeyResetPassworddd" 5
(dd5 6
Userdd6 :
userdd; ?
)dd? @
{ee 	
varff 
keyff 
=ff 
MyRandomff 
.ff 
RandomStringff +
(ff+ ,
$numff, .
)ff. /
;ff/ 0
vargg 
userCurrentgg 
=gg 
awaitgg #
_unitOfWorkgg$ /
.gg/ 0

Repositorygg0 :
<gg: ;
Usergg; ?
>gg? @
(gg@ A
)ggA B
.ggB C
FirstOrDefaultAsyncggC V
(ggV W
itemggW [
=>gg\ ^
itemgg_ c
.ggc d
Idggd f
==ggg i
userggj n
.ggn o
Idggo q
&&ggr t
itemggu y
.ggy z
Emailggz 
==
ggÄ Ç
user
ggÉ á
.
ggá à
Email
ggà ç
&&
ggé ê
item
ggë ï
.
ggï ñ
Username
ggñ û
==
ggü °
user
gg¢ ¶
.
gg¶ ß
Username
ggß Ø
)
ggØ ∞
;
gg∞ ±
userCurrenthh 
.hh 
TokenResetPasswordhh *
=hh+ ,
keyhh- 0
;hh0 1
awaitii 
_unitOfWorkii 
.ii 
SaveChangeAsyncii -
(ii- .
)ii. /
;ii/ 0
returnjj 
keyjj 
;jj 
}kk 	
publicmm 
asyncmm 
Taskmm 
<mm 
boolmm 
>mm 

UpdateUsermm  *
(mm* +
Usermm+ /
usermm0 4
)mm4 5
{nn 	
useroo 
.oo 
UpdatedDateoo 
=oo 
DateTimeOffsetoo -
.oo- .
Nowoo. 1
;oo1 2
_unitOfWorkpp 
.pp 

Repositorypp "
<pp" #
Userpp# '
>pp' (
(pp( )
)pp) *
.pp* +
Updatepp+ 1
(pp1 2
userpp2 6
)pp6 7
;pp7 8
returnqq 
awaitqq 
_unitOfWorkqq $
.qq$ %
SaveChangeAsyncqq% 4
(qq4 5
)qq5 6
;qq6 7
}rr 	
publictt 
asynctt 
Tasktt 
<tt 
booltt 
>tt 
ResetPasswordtt  -
(tt- .
Usertt. 2
usertt3 7
)tt7 8
{uu 	
varvv 
hashedvv 
=vv 
BCryptvv 
.vv  
Netvv  #
.vv# $
BCryptvv$ *
.vv* +
HashPasswordvv+ 7
(vv7 8
uservv8 <
.vv< =
Passwordvv= E
,vvE F
BCryptvvG M
.vvM N
NetvvN Q
.vvQ R
BCryptvvR X
.vvX Y
GenerateSaltvvY e
(vve f
$numvvf h
)vvh i
)vvi j
;vvj k
varww 
existww 
=ww 
awaitww 
_unitOfWorkww )
.ww) *

Repositoryww* 4
<ww4 5
Userww5 9
>ww9 :
(ww: ;
)ww; <
.ww< =
FirstOrDefaultAsyncww= P
(wwP Q
itemwwQ U
=>wwV X
itemwwY ]
.ww] ^
Usernameww^ f
==wwg i
userwwj n
.wwn o
Usernamewwo w
&&wwx z
itemww{ 
.	ww Ä
Email
wwÄ Ö
==
wwÜ à
user
wwâ ç
.
wwç é
Email
wwé ì
)
wwì î
;
wwî ï
existxx 
.xx 
Passwordxx 
=xx 
hashedxx #
;xx# $
existyy 
.yy 
UpdatedDateyy 
=yy 
DateTimeOffsetyy  .
.yy. /
Nowyy/ 2
;yy2 3
existzz 
.zz 
TokenResetPasswordzz $
=zz% &
MyRandomzz' /
.zz/ 0
RandomStringzz0 <
(zz< =
$numzz= ?
)zz? @
;zz@ A
return{{ 
await{{ 
_unitOfWork{{ $
.{{$ %
SaveChangeAsync{{% 4
({{4 5
){{5 6
;{{6 7
}|| 	
}}} 
}~~ ¯)
>D:\Dacntt2\Source\EW\EW.Service\Business\WorkHistoryService.cs
	namespace 	
EW
 
. 
Services 
. 
Business 
{ 
public 

class 
WorkHistoryService #
:$ %
IWorkHistoryService& 9
{		 
private

 
readonly

 
IUnitOfWork

 $
_unitOfWork

% 0
;

0 1
public 
WorkHistoryService !
(! "
IUnitOfWork" -

unitOfWork. 8
)8 9
{ 	
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public 
async 
Task 
< 
WorkHistory %
>% &
Add' *
(* +
WorkHistory+ 6
workHistory7 B
)B C
{ 	
workHistory 
. 
CreatedDate #
=$ %
DateTimeOffset& 4
.4 5
Now5 8
;8 9
workHistory 
. 
UpdatedDate #
=$ %
DateTimeOffset& 4
.4 5
Now5 8
;8 9
await 
_unitOfWork 
. 

Repository (
<( )
WorkHistory) 4
>4 5
(5 6
)6 7
.7 8
AddAsync8 @
(@ A
workHistoryA L
)L M
;M N
if 
( 
! 
await 
_unitOfWork "
." #
SaveChangeAsync# 2
(2 3
)3 4
)4 5
throw 
new 
EWException %
(% &
$str& O
)O P
;P Q
return 
workHistory 
; 
} 	
public 
async 
Task 
< 
bool 
> 
Delete  &
(& '
WorkHistory' 2
workHistory3 >
)> ?
{ 	
var 
currentWorkHistory "
=# $
await% *
_unitOfWork+ 6
.6 7

Repository7 A
<A B
WorkHistoryB M
>M N
(N O
)O P
.P Q
FirstOrDefaultAsyncQ d
(d e
iteme i
=>j l
itemm q
.q r
Idr t
==u w
workHistory	x É
.
É Ñ
Id
Ñ Ü
)
Ü á
??( *
throw+ 0
new1 4
EWException5 @
(@ A
$strA i
)i j
;j k
_unitOfWork 
. 

Repository "
<" #
WorkHistory# .
>. /
(/ 0
)0 1
.1 2
Delete2 8
(8 9
currentWorkHistory9 K
)K L
;L M
return 
await 
_unitOfWork $
.$ %
SaveChangeAsync% 4
(4 5
)5 6
;6 7
}   	
public"" 
async"" 
Task"" 
<"" 
bool"" 
>"" 
Update""  &
(""& '
WorkHistory""' 2
workHistory""3 >
)""> ?
{## 	
var$$ 
currentWorkHistory$$ "
=$$# $
await$$% *
_unitOfWork$$+ 6
.$$6 7

Repository$$7 A
<$$A B
WorkHistory$$B M
>$$M N
($$N O
)$$O P
.$$P Q
FirstOrDefaultAsync$$Q d
($$d e
item$$e i
=>$$j l
item$$m q
.$$q r
Id$$r t
==$$u w
workHistory	$$x É
.
$$É Ñ
Id
$$Ñ Ü
)
$$Ü á
??%%( *
throw%%+ 0
new%%1 4
EWException%%5 @
(%%@ A
$str%%A i
)%%i j
;%%j k
currentWorkHistory&& 
.&& 
UpdatedDate&& *
=&&+ ,
DateTimeOffset&&- ;
.&&; <
Now&&< ?
;&&? @
currentWorkHistory'' 
.'' 
Description'' *
=''+ ,
workHistory''- 8
.''8 9
Description''9 D
;''D E
currentWorkHistory(( 
.(( 
From(( #
=(($ %
workHistory((& 1
.((1 2
From((2 6
;((6 7
currentWorkHistory)) 
.)) 
To)) !
=))" #
workHistory))$ /
.))/ 0
To))0 2
;))2 3
currentWorkHistory** 
.** 
CompanyName** *
=**+ ,
workHistory**- 8
.**8 9
CompanyName**9 D
;**D E
currentWorkHistory++ 
.++ 
	IsWorking++ (
=++) *
workHistory+++ 6
.++6 7
	IsWorking++7 @
;++@ A
_unitOfWork,, 
.,, 

Repository,, "
<,," #
WorkHistory,,# .
>,,. /
(,,/ 0
),,0 1
.,,1 2
Update,,2 8
(,,8 9
currentWorkHistory,,9 K
),,K L
;,,L M
return-- 
await-- 
_unitOfWork-- $
.--$ %
SaveChangeAsync--% 4
(--4 5
)--5 6
;--6 7
}.. 	
}// 
}00 ù
@D:\Dacntt2\Source\EW\EW.Service\Contracts\IApplicationService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
IApplicationService (
{ 
Task		 
<		 
Application		 
>		 
Add		 
(		 
AddApplicationModel		 1
model		2 7
)		7 8
;		8 9
Task

 
<

 
IEnumerable

 
<

 
Application

 $
>

$ %
>

% &
GetByApplier

' 3
(

3 4
User

4 8
user

9 =
)

= >
;

> ?
Task 
< 
IEnumerable 
< 
JobAppliedViewModel ,
>, -
>- .
GetJobsApplied/ =
(= >
User> B
userC G
)G H
;H I
Task 
< 
IEnumerable 
< '
AppliedForBusinessViewModel 4
>4 5
>5 6"
GetAppliedsForBusiness7 M
(M N
UserN R
userS W
)W X
;X Y
Task 
< 
IEnumerable 
< '
AppliedForBusinessViewModel 4
>4 5
>5 6
GetApplieds7 B
(B C
)C D
;D E
Task 
< 
bool 
> 
Update 
( 
Application %
application& 1
)1 2
;2 3
Task 
< 
bool 
> 
	IsHasRole 
(  
ApplicationUserModel 1
model2 7
)7 8
;8 9
} 
} ó
AD:\Dacntt2\Source\EW\EW.Service\Contracts\IBlogCategoryService.cs
	namespace 	
EW
 
. 
Services 
. 
	Contracts 
{ 
public 

	interface  
IBlogCategoryService )
{ 
Task 
< 
BlogCategory 
> 
Add 
( 
BlogCategory +
model, 1
)1 2
;2 3
Task 
< 
BlogCategory 
> 
Update !
(! "
BlogCategory" .
model/ 4
)4 5
;5 6
Task		 
<		 
bool		 
>		 
Delete		 
(		 
BlogCategory		 &
model		' ,
)		, -
;		- .
Task

 
<

 
IEnumerable

 
<

 
BlogCategory

 %
>

% &
>

& '
GetAll

( .
(

. /
)

/ 0
;

0 1
} 
} ˆ
9D:\Dacntt2\Source\EW\EW.Service\Contracts\IBlogService.cs
	namespace 	
EW
 
. 
Services 
. 
	Contracts 
{ 
public 

	interface 
IBlogService !
{ 
Task 
< 
IEnumerable 
< 
Blog 
> 
> 
GetAll  &
(& '
)' (
;( )
Task 
< 
Blog 
> 
Add 
( 
Blog 
blog  
)  !
;! "
Task		 
<		 
Blog		 
>		 
Update		 
(		 
Blog		 
blog		 #
)		# $
;		$ %
Task

 
<

 
bool

 
>

 
Delete

 
(

 
Blog

 
blog

 #
)

# $
;

$ %
Task 
< 
Blog 
> 
Get 
( 
long 
id 
) 
;  
} 
} «
@D:\Dacntt2\Source\EW\EW.Service\Contracts\ICertificateService.cs
	namespace 	
EW
 
. 
Services 
. 
	Contracts 
{ 
public 

	interface 
ICertificateService (
{ 
Task 
< 
Certificate 
> 
Add 
( 
Certificate )
model* /
)/ 0
;0 1
Task 
< 
bool 
> 
Delete 
( 
Certificate %
model& +
)+ ,
;, -
Task		 
<		 
bool		 
>		 
Update		 
(		 
Certificate		 %
model		& +
)		+ ,
;		, -
}

 
} Ü
:D:\Dacntt2\Source\EW\EW.Service\Contracts\IChartService.cs
	namespace 	
EW
 
. 
Services 
. 
	Contracts 
{ 
public 

	interface 
IChartService "
{ 
Task 
< 
IEnumerable 
< &
NumberApplicationViewModel 3
>3 4
>4 5 
GetNumberApplication6 J
(J K
)K L
;L M
Task 
< 
IEnumerable 
<  
ChartResultViewModel -
>- .
>. /$
GetNumberRecruitmentPost0 H
(H I
)I J
;J K
Task		 
<		 
IEnumerable		 
<		  
ChartResultViewModel		 -
>		- .
>		. / 
GetRankingTechStacks		0 D
(		D E
string		E K
[		K L
]		L M

techStacks		N X
)		X Y
;		Y Z
}

 
} ä
<D:\Dacntt2\Source\EW\EW.Service\Contracts\ICompanyService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
ICompanyService $
{ 
Task		 
<		 
Company		 
>		 
Find		 
(		 
Company		 "
	recruiter		# ,
)		, -
;		- .
Task

 
<

 
Company

 
>

 
GetCompanyByUser

 &
(

& '
User

' +
user

, 0
)

0 1
;

1 2
Task 
< 
IEnumerable 
< 
Company  
>  !
>! "
GetCompanies# /
(/ 0
)0 1
;1 2
Task 
< 
bool 
> $
UpdateInformationCompany +
(+ ,
UpdateCompanyModel, >
model? D
)D E
;E F
Task 
< 
Company 
> 

GetCompany  
(  !
Company! (
model) .
). /
;/ 0
Task 
< 
Company 
> 

AddCompany  
(  !
Company! (
model) .
). /
;/ 0
Task 
< 
bool 
> 
UploadAvatarCompany &
(& '
Company' .
company/ 6
)6 7
;7 8
Task 
< 
IEnumerable 
< 
TopComapnyModel (
>( )
>) *
GetTopCompanies+ :
(: ;
); <
;< =
} 
} ª
>D:\Dacntt2\Source\EW\EW.Service\Contracts\IEducationService.cs
	namespace 	
EW
 
. 
Services 
. 
	Contracts 
{ 
public 

	interface 
IEducationService &
{ 
Task 
< 
	Education 
> 
Add 
( 
	Education %
model& +
)+ ,
;, -
Task 
< 
bool 
> 
Delete 
( 
	Education #
model$ )
)) *
;* +
Task		 
<		 
bool		 
>		 
Update		 
(		 
	Education		 #
model		$ )
)		) *
;		* +
}

 
} Ø
:D:\Dacntt2\Source\EW\EW.Service\Contracts\IEmailService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
IEmailService "
{ 
Task 
	SendEmail 
( 
EmailDataModel %
data& *
)* +
;+ ,
} 
}		 °
<D:\Dacntt2\Source\EW\EW.Service\Contracts\IProfileSerivce.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
IProfileSerivce $
{ 
Task 
< 
Profile 
> 

GetProfile  
(  !
User! %
user& *
)* +
;+ ,
Task		 
<		 
Profile		 
>		 
InitProfile		 !
(		! "
User		" &
user		' +
)		+ ,
;		, -
Task

 
<

 
bool

 
>

 
UpdateProfile

  
(

  !
Profile

! (
profile

) 0
)

0 1
;

1 2
Task 
< 
IEnumerable 
< '
ProfileOpenForWorkViewModel 4
>4 5
>5 6"
GetProfileOpenForWorks7 M
(M N
)N O
;O P
} 
} Ø
<D:\Dacntt2\Source\EW\EW.Service\Contracts\IProjectService.cs
	namespace 	
EW
 
. 
Services 
. 
	Contracts 
{ 
public 

	interface 
IProjectService $
{ 
Task 
< 
Project 
> 
Add 
( 
Project !
model" '
)' (
;( )
Task 
< 
bool 
> 
Delete 
( 
Project !
model" '
)' (
;( )
Task		 
<		 
bool		 
>		 
Update		 
(		 
Project		 !
model		" '
)		' (
;		( )
}

 
} ’

>D:\Dacntt2\Source\EW\EW.Service\Contracts\IRecruiterService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
IRecruiterService &
{ 
Task		 
<		 
bool		 
>		 
AddNewRecruiter		 "
(		" #"
RegisterRecruiterModel		# 9
model		: ?
)		? @
;		@ A
Task

 
<

 
IEnumerable

 
<

 
RecruiterViewModel

 +
>

+ ,
>

, -
GetRecruiters

. ;
(

; <
)

< =
;

= >
Task 
< 
bool 
> 
AssignUserToCompany &
(& ''
AddNewRecruiterAccountModel' B
modelC H
)H I
;I J
Task 
< 
RecruiterViewModel 
>  
GetRecruiterByUser! 3
(3 4
User4 8
model9 >
)> ?
;? @
Task 
< 
IEnumerable 
< 
RecruiterViewModel +
>+ ,
>, -"
GetRecruitersByCompany. D
(D E
CompanyE L
companyM T
)T U
;U V
} 
} ë
DD:\Dacntt2\Source\EW\EW.Service\Contracts\IRecruitmentPostService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface #
IRecruitmentPostService ,
{ 
Task 
< 
RecruitmentPost 
> 
Add !
(! "
RecruitmentPost" 1
model2 7
)7 8
;8 9
Task 
< 
bool 
> 
Update 
( 
RecruitmentPost )
model* /
)/ 0
;0 1
Task		 
<		 
IEnumerable		 
<		 
RecruitmentPost		 (
>		( )
>		) *
GetAll		+ 1
(		1 2
)		2 3
;		3 4
Task

 
<

 
RecruitmentPost

 
>

 
GetRecruitmentPost

 0
(

0 1
RecruitmentPost

1 @
model

A F
)

F G
;

G H
Task 
< 
RecruitmentPost 
> "
GetRecruitmentSpecific 4
(4 5
RecruitmentPost5 D
modelE J
)J K
;K L
Task 
< 
IEnumerable 
< 
RecruitmentPost (
>( )
>) *%
GetRecruitmentPostsByUser+ D
(D E
UserE I
userJ N
)N O
;O P
Task 
< 
bool 
> 
Delete 
( 
RecruitmentPost )
model* /
)/ 0
;0 1
Task 
< 
IEnumerable 
< 
RecruitmentPost (
>( )
>) *(
GetRecruitmentPostsByCompany+ G
(G H
CompanyH O
companyP W
)W X
;X Y
Task 
< 
RecruitmentPost 
> '
GetRecruitmentPostForDetail 9
(9 :
RecruitmentPost: I
modelJ O
)O P
;P Q
} 
} ⁄
:D:\Dacntt2\Source\EW\EW.Service\Contracts\ITokenService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
ITokenService "
{ 
string 
CreateToken 
( 
User 
user  $
)$ %
;% &
string		 
CreateRefreshToken		 !
(		! "
User		" &
user		' +
)		+ ,
;		, -
JwtSecurityToken

 
?

 "
GetPayloadRefreshToken

 0
(

0 1
string

1 7
refreshToken

8 D
)

D E
;

E F
} 
} ÿ	
;D:\Dacntt2\Source\EW\EW.Service\Contracts\IUserCVService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
IUserCVService #
{ 
Task 
< 
UserCV 
> 
AddCV 
( 
UserCV !
model" '
)' (
;( )
Task 
< 
bool 
> 
RemoveCV 
( 
UserCV "
model# (
)( )
;) *
Task		 
<		 
IEnumerable		 
<		 
UserCV		 
>		  
>		  !
GetUserCVsByUser		" 2
(		2 3
User		3 7
model		8 =
)		= >
;		> ?
Task

 
<

 
UserCV

 
>

 
GetUserCVByInfo

 $
(

$ %
UserCV

% +
model

, 1
)

1 2
;

2 3
Task 
< 
bool 
> 
UpdateFeaturedCV #
(# $
UserCV$ *
model+ 0
)0 1
;1 2
} 
} ∏
CD:\Dacntt2\Source\EW\EW.Service\Contracts\IUserExperienceService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface "
IUserExperienceService +
{ 
Task 
< 
IEnumerable 
< 
UserExperience '
>' (
>( )$
GetUserExperiencesByUser* B
(B C
UserC G
modelH M
)M N
;N O
} 
}		 ‹
9D:\Dacntt2\Source\EW\EW.Service\Contracts\IUserService.cs
	namespace 	
EW
 
. 
Services 
. 

Constracts  
{ 
public 

	interface 
IUserService !
{ 
Task 
< 
IEnumerable 
< 
User 
> 
> 
GetUsers  (
(( )
)) *
;* +
Task 
< 
bool 
> 
AddUser 
( 
User 
user  $
)$ %
;% &
Task		 
<		 
User		 
>		 
GetUser		 
(		 
User		 
user		  $
)		$ %
;		% &
Task

 
<

 
bool

 
>

 
Register

 
(

 
User

  
user

! %
)

% &
;

& '
Task 
< 
bool 
> 
RegisterWithGoogle %
(% &
User& *
user+ /
)/ 0
;0 1
Task 
< 
IEnumerable 
< 
Role 
> 
> 
GetRoles  (
(( )
)) *
;* +
Task 
< 
bool 
> 

UpdateUser 
( 
User "
user# '
)' (
;( )
Task 
< 
string 
> 
GenKeyResetPassword (
(( )
User) -
user. 2
)2 3
;3 4
Task 
< 
bool 
> 
ResetPassword  
(  !
User! %
user& *
)* +
;+ ,
} 
} Ÿ
@D:\Dacntt2\Source\EW\EW.Service\Contracts\IWorkHistoryService.cs
	namespace 	
EW
 
. 
Services 
. 
	Contracts 
{ 
public 

	interface 
IWorkHistoryService (
{ 
Task 
< 
WorkHistory 
> 
Add 
( 
WorkHistory )
workHistory* 5
)5 6
;6 7
Task 
< 
bool 
> 
Delete 
( 
WorkHistory %
workHistory& 1
)1 2
;2 3
Task		 
<		 
bool		 
>		 
Update		 
(		 
WorkHistory		 %
workHistory		& 1
)		1 2
;		2 3
}

 
} 