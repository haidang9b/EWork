{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.7.0.0",
        "fileVersion": "4.7.0-3.23280.5 (aff92b57)",
        "semanticVersion": "4.7.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "\"password\" detected here, make sure this is not a hard-coded credential.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/appsettings.json",
                "region": {
                  "startLine": 16,
                  "startColumn": 18,
                  "endLine": 16,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/MappingConfig.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 18,
                  "endLine": 12,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2094",
          "level": "warning",
          "message": "Remove this empty class, write its code or make it an \"interface\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Models/Models/Auths/RegisterModel.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 18,
                  "endLine": 12,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2094",
          "level": "warning",
          "message": "Remove this empty class, write its code or make it an \"interface\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Models/Models/Uploads/UploadFileModel.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2094",
          "level": "warning",
          "message": "Remove this empty class, write its code or make it an \"interface\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Models/Models/Uploads/UploadFileModel.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4136",
          "level": "warning",
          "message": "All 'Get' method overloads should be adjacent.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/CompaniesController.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 42,
                  "endLine": 54,
                  "endColumn": 45
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/CompaniesController.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 42,
                  "endLine": 193,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Non-adjacent overload"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/WorkHistoriesController.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 34,
                  "endLine": 109,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/WorkHistoriesController.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 34,
                  "endLine": 76,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Program.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 40,
                  "endLine": 53,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'Add section MyAllowSpecificOrigins' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Program.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 15,
                  "endLine": 11,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/WorkHistoriesController.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 34,
                  "endLine": 140,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S5122",
          "level": "warning",
          "message": "Make sure this permissive CORS policy is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Program.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 58,
                  "endLine": 19,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method <Main>$ passes 'Add section MyAllowSpecificOrigins' as the paramName argument to a ArgumentNullException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Program.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 15,
                  "endLine": 11,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 42,
                  "endLine": 61,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 13,
                  "endLine": 64,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 35,
                  "endLine": 64,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 45,
                  "endLine": 70,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 21,
                  "endLine": 75,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 45,
                  "endLine": 75,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 21,
                  "endLine": 80,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 17,
                  "endLine": 85,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/AuthController.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 13,
                  "endLine": 98,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/UploadsController.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 34,
                  "endLine": 182,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 42,
                  "endLine": 56,
                  "endColumn": 46
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endLine": 68,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 21,
                  "endLine": 71,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 17,
                  "endLine": 79,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 21,
                  "endLine": 82,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 17,
                  "endLine": 92,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 17,
                  "endLine": 97,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 13,
                  "endLine": 103,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 17,
                  "endLine": 106,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 17,
                  "endLine": 125,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Dacntt2/Source/EW/EW.WebAPI/Controllers/RecruitmentPostsController.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 17,
                  "endLine": 130,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+3 (incl 2 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        }
      ],
      "rules": {
        "CA2208": {
          "id": "CA2208",
          "shortDescription": "Instantiate argument exceptions correctly",
          "fullDescription": "A call is made to the default (parameterless) constructor of an exception type that is or derives from ArgumentException, or an incorrect string argument is passed to a parameterized constructor of an exception type that is or derives from ArgumentException.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2068": {
          "id": "S2068",
          "shortDescription": "Hard-coded credentials are security-sensitive",
          "fullDescription": "Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true for applications that are distributed or that are open-source.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2068",
          "properties": {
            "category": "Blocker Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2094": {
          "id": "S2094",
          "shortDescription": "Classes should not be empty",
          "fullDescription": "There is no good excuse for an empty class. If it’s being used simply as a common extension point, it should be replaced with an interface. If it was stubbed in as a placeholder for future development it should be fleshed-out. In any other case, it should be eliminated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2094",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4136": {
          "id": "S4136",
          "shortDescription": "Method overloads should be grouped together",
          "fullDescription": "For clarity, all overloads of the same method should be grouped together. That lets both users and maintainers quickly understand all the current available options.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4136",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S5122": {
          "id": "S5122",
          "shortDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive",
          "fullDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-5122",
          "properties": {
            "category": "Minor Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}