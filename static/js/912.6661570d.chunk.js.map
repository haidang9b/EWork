{"version":3,"file":"static/js/912.6661570d.chunk.js","mappings":"gWAiCMA,EAAa,SAAH,GAAyC,IAAnCC,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eAC/B,GAAkCC,EAAAA,EAAAA,WAXD,GAWuC,eAAjEC,EAAS,KAAEC,EAAY,KAC9B,GAA6BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAjCC,EAAW,EAAXA,YAAaC,EAAG,EAAHA,IACbC,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAA4BP,EAAAA,EAAAA,UAAS,MAAK,eAAnCS,EAAM,KAAEC,EAAS,KAChBC,GAAWR,EAAAA,EAAAA,IAAYS,EAAAA,IAAvBD,OACFE,GAAWC,EAAAA,EAAAA,MAOXC,EAAW,yCAAG,+FAvBa,IAwBzBd,EAA0C,gBAMvC,OALHM,EAAU,CACNS,QAAQ,EACRC,MAAM,yCAAD,OAAoC,OAAXnB,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,UAC3CC,QAAS,4CACTC,KAAM,UACP,0BAON,OAJKC,EAAM,CACRC,SAAUrB,EACVsB,kBAA8B,OAAXzB,QAAW,IAAXA,OAAW,EAAXA,EAAa0B,MAChCnB,YAAmB,OAANI,QAAM,IAANA,OAAM,EAANA,EAAQgB,KAAKC,WAC5B,EAAD,OAC4Bb,GACzBc,EAAAA,EAAAA,IAAoBN,IACtBO,SAAS,KAAD,EAFJC,EAAc,OAIpBtB,EAAU,CACNS,QAAQ,EACRI,KAAoB,OAAdS,QAAc,IAAdA,GAAAA,EAAgBC,UAAY,UAAY,QAC9CX,QAAuB,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,QACzBF,MAAM,yCAAD,OAAoC,OAAXnB,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,YAE/CnB,GAAe,kBACRD,GAAW,IACdkB,QAAQ,KACT,2CACN,kBA7BgB,mCA8BjB,OACI,UAAC,IAAM,CACHe,KAAMjC,EAAYkB,OAClB,kBAAgB,qBAChB,mBAAiB,2BACjBgB,QAzCY,WAChBjC,GAAe,kBACRD,GAAW,IACdkB,QAAQ,IAEhB,EAqCQiB,SAAU,KACVC,WAAS,aAET,SAAC,IAAW,0DACZ,UAAC,IAAa,CAACC,GAAG,qBAAoB,WAClC,UAAC,IAAU,CAACC,QAAQ,OAAM,oHAC4B,IACjDtC,EAAYoB,aAEjB,SAAC,IAAU,CACPiB,GAAG,oBACHE,UAAU,iCAAgC,2BAI9C,UAAC,IAAM,CACHC,QAAQ,oBACRJ,WAAS,EACTK,MAAOtC,EACPuC,SAAU,SAACC,GAAC,OAAKvC,EAAauC,EAAEC,OAAOH,MAAM,EAAC,WAE9C,SAAC,IAAQ,CAACA,OAhFO,EAgF6B,UAC1C,2CAEHjC,EAAIqC,KAAI,SAACC,GAAI,OACV,SAAC,IAAQ,CAA4BL,MAAOK,EAAKT,GAAG,SAC/CS,EAAKC,QADKC,KAAKC,UAAUH,GAEnB,QAGnB,mBACA,SAAC,IAAU,CAACP,UAAU,iCAAgC,4CAGtD,SAAC,KAAc,CACX5B,OAAQA,EACRC,UAAWA,EACXsC,YAAa3C,QAGrB,SAAC,IAAa,WACV,UAAC,IAAK,CAAC4C,SAAU,OAAO,WACpB,SAAC,IAAM,CACHC,WAAW,SAAC,IAAI,IAChBhB,WAAS,EACTE,QAAQ,YACRe,QAASpC,EACTqC,SAAUzC,IAAW0C,EAAAA,GAAAA,QAAe,kCAIxC,SAAC,IAAc,CACXC,GAAI,CACAC,QACI5C,IAAW0C,EAAAA,GAAAA,QAAiB,QAAU,iBAOtE,EAEAxD,EAAW2D,YAAc,aAOzB,W","sources":["pages/JobDetail/ApplyModal/index.js"],"sourcesContent":["import { Send } from \"@mui/icons-material\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    InputLabel,\r\n    LinearProgress,\r\n    MenuItem,\r\n    Select,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { Stack } from \"@mui/system\";\r\nimport { func, object } from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Status } from \"../../../common/constants\";\r\nimport { RichTextEditor } from \"../../../components\";\r\nimport useNotify from \"../../../hook/useNotify\";\r\nimport { documentSelector } from \"../../CVManagement/document.slice\";\r\nimport { addApplicationThunk, applicationSelector } from \"./application.slice\";\r\n\r\nconst DEFAULT_VALUE_ID_CV_SELECTED = -1;\r\n/**\r\n * UI Apply for Student\r\n * @param {Object} object\r\n * @param {Object} object.applyDialog\r\n * @param {Function} object.setApplyDialog\r\n * @returns\r\n * @example\r\n * <ApplyModal applyDialog setApplyDialog />\r\n */\r\nconst ApplyModal = ({ applyDialog, setApplyDialog }) => {\r\n    const [currentCV, setCurrentCV] = useState(DEFAULT_VALUE_ID_CV_SELECTED);\r\n    const { coverLetter, cvs } = useSelector(documentSelector);\r\n    const { setNotify } = useNotify();\r\n    const [editor, setEditor] = useState(null);\r\n    const { status } = useSelector(applicationSelector);\r\n    const dispatch = useDispatch();\r\n    const handleClose = () => {\r\n        setApplyDialog({\r\n            ...applyDialog,\r\n            isOpen: false,\r\n        });\r\n    };\r\n    const handleApply = async () => {\r\n        if (currentCV === DEFAULT_VALUE_ID_CV_SELECTED) {\r\n            setNotify({\r\n                isOpen: true,\r\n                title: `Ứng tuyển công việc ${applyDialog?.jobTitle}`,\r\n                message: \"Vui lòng chọn CV hợp lệ\",\r\n                type: \"error\",\r\n            });\r\n            return;\r\n        }\r\n        const obj = {\r\n            userCVId: currentCV,\r\n            recruitmentPostId: applyDialog?.jobId,\r\n            coverLetter: editor?.root.innerHTML,\r\n        };\r\n        const resultDispatch = await dispatch(\r\n            addApplicationThunk(obj)\r\n        ).unwrap();\r\n\r\n        setNotify({\r\n            isOpen: true,\r\n            type: resultDispatch?.isSuccess ? \"success\" : \"error\",\r\n            message: resultDispatch?.message,\r\n            title: `Ứng tuyển công việc ${applyDialog?.jobTitle}`,\r\n        });\r\n        setApplyDialog({\r\n            ...applyDialog,\r\n            isOpen: false,\r\n        });\r\n    };\r\n    return (\r\n        <Dialog\r\n            open={applyDialog.isOpen}\r\n            aria-labelledby=\"apply-dialog-title\"\r\n            aria-describedby=\"apply-dialog-description\"\r\n            onClose={handleClose}\r\n            maxWidth={\"md\"}\r\n            fullWidth\r\n        >\r\n            <DialogTitle>Nộp đơn ứng tuyển</DialogTitle>\r\n            <DialogContent id=\"apply-dialog-title\">\r\n                <Typography variant=\"text\">\r\n                    Chọn CV và thư giới thiệu để ứng tuyển vào vị trí{\" \"}\r\n                    {applyDialog.jobTitle}\r\n                </Typography>\r\n                <InputLabel\r\n                    id=\"apply-modal-label\"\r\n                    className=\"job-detail-apply-dialog__label\"\r\n                >\r\n                    Chọn cv\r\n                </InputLabel>\r\n                <Select\r\n                    labelId=\"apply-modal-label\"\r\n                    fullWidth\r\n                    value={currentCV}\r\n                    onChange={(e) => setCurrentCV(e.target.value)}\r\n                >\r\n                    <MenuItem value={DEFAULT_VALUE_ID_CV_SELECTED}>\r\n                        <em>Chọn cv</em>\r\n                    </MenuItem>\r\n                    {cvs.map((item) => (\r\n                        <MenuItem key={JSON.stringify(item)} value={item.id}>\r\n                            {item.cvName}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                <br />\r\n                <InputLabel className=\"job-detail-apply-dialog__label\">\r\n                    Thư giới thiệu\r\n                </InputLabel>\r\n                <RichTextEditor\r\n                    editor={editor}\r\n                    setEditor={setEditor}\r\n                    initialHTML={coverLetter}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Stack minWidth={\"100%\"}>\r\n                    <Button\r\n                        startIcon={<Send />}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        onClick={handleApply}\r\n                        disabled={status === Status.loading}\r\n                    >\r\n                        Ứng tuyển\r\n                    </Button>\r\n                    <LinearProgress\r\n                        sx={{\r\n                            display:\r\n                                status === Status.loading ? \"block\" : \"none\",\r\n                        }}\r\n                    />\r\n                </Stack>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nApplyModal.displayName = \"ApplyModal\";\r\n\r\nApplyModal.propTypes = {\r\n    applyDialog: object.isRequired,\r\n    setApplyDialog: func.isRequired,\r\n};\r\n\r\nexport default ApplyModal;\r\n"],"names":["ApplyModal","applyDialog","setApplyDialog","useState","currentCV","setCurrentCV","useSelector","documentSelector","coverLetter","cvs","setNotify","useNotify","editor","setEditor","status","applicationSelector","dispatch","useDispatch","handleApply","isOpen","title","jobTitle","message","type","obj","userCVId","recruitmentPostId","jobId","root","innerHTML","addApplicationThunk","unwrap","resultDispatch","isSuccess","open","onClose","maxWidth","fullWidth","id","variant","className","labelId","value","onChange","e","target","map","item","cvName","JSON","stringify","initialHTML","minWidth","startIcon","onClick","disabled","Status","sx","display","displayName"],"sourceRoot":""}