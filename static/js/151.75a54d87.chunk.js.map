{"version":3,"file":"static/js/151.75a54d87.chunk.js","mappings":"uSAmBMA,EAAa,WACf,IAAQC,GAAsBC,EAAAA,EAAAA,KAAtBD,kBACAE,GAAcC,EAAAA,EAAAA,KAAdD,UACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,CAC7CC,QAAQ,EACRC,MAAO,sDACPC,UAAU,EACVC,qBAAsB,CAAC,MAAO,OAAQ,OAAQ,MAAO,MAAO,QAC5DC,SAAS,WAAD,8BAAE,WAAOC,GAAK,4FACWR,GACzBS,EAAAA,EAAAA,IAAyBD,EAAM,KACjCE,SAAS,KAAD,EAFJC,EAAc,OAGpBb,EAAU,CACNK,QAAQ,EACRS,QAASD,EAAeC,QACxBR,MAAO,sCACPS,KAAMF,EAAeG,UAAY,UAAY,UAE7CH,EAAeG,WACfC,GAAgB,kBACTC,GAAY,IACfb,QAAQ,KAEf,2CACJ,mDAhBQ,KAiBX,eAtBKa,EAAY,KAAED,EAAe,KAuBpC,GAAgCE,EAAAA,EAAAA,IAAYC,EAAAA,IAApCC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YAOhB,OACI,UAAC,IAAI,CACDC,GAAI,CACAC,UAAW,SACXC,UAAW,OACb,WAEF,SAAC,IAAU,uCACX,UAAC,IAAW,CACRF,GAAI,CACAC,UAAW,UACb,WAEF,SAAC,IAAM,CACHE,IAAI,SACJC,IACe,OAAXL,QAAW,IAAXA,GAAAA,EAAaM,UAAS,UACb9B,EAA6B,OAAXwB,QAAW,IAAXA,OAAW,EAAXA,EAAaM,YAClC,8BAEVC,QAAQ,OACRN,GAAI,CACAO,OAAQ,oBACRC,OAAQ,CACJC,GAAI,QACJC,GAAI,QAERC,MAAO,CACHF,GAAI,QACJC,GAAI,QAERE,OAAQ,WAGhB,SAAC,IAAU,CAACC,QAAQ,KAAI,SACnBf,IAAWgB,EAAAA,GAAAA,QACN,UACW,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAagB,eAEvB,SAAC,IAAM,CAACF,QAAQ,WAAWG,QA7CZ,WACvBtB,GAAgB,kBACTC,GAAY,IACfb,QAAQ,IAEhB,EAwCmE,sEAI3D,SAAC,KAAgB,CACba,aAAcA,EACdD,gBAAiBA,MAIjC,EAEApB,EAAW2C,YAAc,aAEzB,W","sources":["pages/CompanyInformation/HeaderCard/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    companyInformationSelector,\r\n    uploadAvatarCompanyThunk,\r\n} from \"../companyInformation.slice\";\r\nimport { Status } from \"../../../common/constants\";\r\nimport { UploadFileDialog } from \"../../../components\";\r\nimport useNotify from \"../../../hook/useNotify\";\r\nimport useFileUpload from \"../../../hook/useFileUpload\";\r\n\r\nconst HeaderCard = () => {\r\n    const { getFilePathUpload } = useFileUpload();\r\n    const { setNotify } = useNotify();\r\n    const dispatch = useDispatch();\r\n    const [uploadDialog, setUploadDialog] = useState({\r\n        isOpen: false,\r\n        title: \"Thay đổi ảnh đại diện\",\r\n        mutliple: false,\r\n        acceptExtensionFiles: [\"jpg\", \"jpeg\", \"apng\", \"png\", \"svg\", \"webp\"],\r\n        onUpload: async (files) => {\r\n            const resultDispatch = await dispatch(\r\n                uploadAvatarCompanyThunk(files[0])\r\n            ).unwrap();\r\n            setNotify({\r\n                isOpen: true,\r\n                message: resultDispatch.message,\r\n                title: \"Đăng tải CV mới\",\r\n                type: resultDispatch.isSuccess ? \"success\" : \"error\",\r\n            });\r\n            if (resultDispatch.isSuccess) {\r\n                setUploadDialog({\r\n                    ...uploadDialog,\r\n                    isOpen: false,\r\n                });\r\n            }\r\n        },\r\n    });\r\n    const { status, information } = useSelector(companyInformationSelector);\r\n    const handleChangeAvatar = () => {\r\n        setUploadDialog({\r\n            ...uploadDialog,\r\n            isOpen: true,\r\n        });\r\n    };\r\n    return (\r\n        <Card\r\n            sx={{\r\n                textAlign: \"Center\",\r\n                marginTop: \"4px\",\r\n            }}\r\n        >\r\n            <CardHeader>Thông tin công ty</CardHeader>\r\n            <CardContent\r\n                sx={{\r\n                    textAlign: \"center\",\r\n                }}\r\n            >\r\n                <Avatar\r\n                    alt=\"Avatar\"\r\n                    src={\r\n                        information?.avatarUrl\r\n                            ? `${getFilePathUpload(information?.avatarUrl)}`\r\n                            : \"/static/images/avatar/2.jpg\"\r\n                    }\r\n                    loading=\"lazy\"\r\n                    sx={{\r\n                        border: \"solid 1px #f0f2f5\",\r\n                        height: {\r\n                            md: \"160px\",\r\n                            xs: \"80px\",\r\n                        },\r\n                        width: {\r\n                            md: \"160px\",\r\n                            xs: \"80px\",\r\n                        },\r\n                        margin: \"auto\",\r\n                    }}\r\n                />\r\n                <Typography variant=\"h6\">\r\n                    {status === Status.loading\r\n                        ? \"Loading\"\r\n                        : information?.companyName}\r\n                </Typography>\r\n                <Button variant=\"outlined\" onClick={handleChangeAvatar}>\r\n                    Chỉnh sửa ảnh đại diện\r\n                </Button>\r\n            </CardContent>\r\n            <UploadFileDialog\r\n                uploadDialog={uploadDialog}\r\n                setUploadDialog={setUploadDialog}\r\n            />\r\n        </Card>\r\n    );\r\n};\r\n\r\nHeaderCard.displayName = \"HeaderCard\";\r\n\r\nexport default HeaderCard;\r\n"],"names":["HeaderCard","getFilePathUpload","useFileUpload","setNotify","useNotify","dispatch","useDispatch","useState","isOpen","title","mutliple","acceptExtensionFiles","onUpload","files","uploadAvatarCompanyThunk","unwrap","resultDispatch","message","type","isSuccess","setUploadDialog","uploadDialog","useSelector","companyInformationSelector","status","information","sx","textAlign","marginTop","alt","src","avatarUrl","loading","border","height","md","xs","width","margin","variant","Status","companyName","onClick","displayName"],"sourceRoot":""}